const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":144,\"nextId\":144,\"documentIds\":{\"0\":\"3\",\"1\":\"4\",\"2\":\"5\",\"3\":\"6\",\"4\":\"7\",\"5\":\"8\",\"6\":\"8#📌std-auto-ptr-已废弃\",\"7\":\"8#基本原理\",\"8\":\"8#模拟实现\",\"9\":\"8#📌std-unique-ptr\",\"10\":\"8#基本原理-1\",\"11\":\"8#模拟实现-1\",\"12\":\"8#📌std-shared-ptr\",\"13\":\"8#基本原理-2\",\"14\":\"8#模拟实现-2\",\"15\":\"8#std-shared-ptr的循环引用问题\",\"16\":\"8#解决方法-使用-std-weak-ptr\",\"17\":\"8#📌std-weak-ptr\",\"18\":\"8#基本原理-3\",\"19\":\"9\",\"20\":\"10\",\"21\":\"10#一、什么是进程-process\",\"22\":\"10#✅定义\",\"23\":\"10#📌举个例子\",\"24\":\"10#二、什么是线程-thread\",\"25\":\"10#✅定义-1\",\"26\":\"10#📌举个例子-1\",\"27\":\"10#三、进程与线程的联系\",\"28\":\"10#四、进程与线程的区别\",\"29\":\"10#五、为什么操作系统需要-线程\",\"30\":\"10#六、总结\",\"31\":\"11\",\"32\":\"11#简要题面\",\"33\":\"11#题面\",\"34\":\"11#输入描述\",\"35\":\"11#输出描述\",\"36\":\"11#输入输出样例\",\"37\":\"11#输入-1\",\"38\":\"11#输出-1\",\"39\":\"11#说明-提示\",\"40\":\"11#解法\",\"41\":\"11#定义状态\",\"42\":\"11#转移方程\",\"43\":\"11#参考程序\",\"44\":\"12\",\"45\":\"13\",\"46\":\"13#简要题面\",\"47\":\"13#题面\",\"48\":\"13#输入描述\",\"49\":\"13#输出描述\",\"50\":\"13#输入输出样例\",\"51\":\"13#输入-1\",\"52\":\"13#输出-1\",\"53\":\"13#说明-提示\",\"54\":\"13#解法\",\"55\":\"13#参考程序\",\"56\":\"14\",\"57\":\"14#简要题面\",\"58\":\"14#题面\",\"59\":\"14#输入描述\",\"60\":\"14#输出描述\",\"61\":\"14#输入输出样例\",\"62\":\"14#输入-1\",\"63\":\"14#输出-1\",\"64\":\"14#输入-2\",\"65\":\"14#输出-2\",\"66\":\"14#说明-提示\",\"67\":\"14#解法\",\"68\":\"14#参考程序\",\"69\":\"15\",\"70\":\"15#简要题面\",\"71\":\"15#题面\",\"72\":\"15#输入描述\",\"73\":\"15#输出描述\",\"74\":\"15#输入输出样例\",\"75\":\"15#输入-1\",\"76\":\"15#输出-1\",\"77\":\"15#说明-提示\",\"78\":\"15#解法\",\"79\":\"15#参考程序\",\"80\":\"16\",\"81\":\"16#简要题面\",\"82\":\"16#题面\",\"83\":\"16#输入描述\",\"84\":\"16#输出描述\",\"85\":\"16#输入输出样例\",\"86\":\"16#输入-1\",\"87\":\"16#输出-1\",\"88\":\"16#说明-提示\",\"89\":\"16#解法\",\"90\":\"16#参考程序\",\"91\":\"17\",\"92\":\"17#_1-股神小易\",\"93\":\"17#题面\",\"94\":\"17#解法\",\"95\":\"17#参考程序\",\"96\":\"17#_2-2048\",\"97\":\"17#题面-1\",\"98\":\"17#解法-1\",\"99\":\"17#参考程序-1\",\"100\":\"17#_3-星际探险\",\"101\":\"17#题面-2\",\"102\":\"17#解法-2\",\"103\":\"17#参考程序-2\",\"104\":\"18\",\"105\":\"19\",\"106\":\"19#📌准备工作\",\"107\":\"19#🔥下载node-js\",\"108\":\"19#🔥添加两个文件夹\",\"109\":\"19#🔥环境变量\",\"110\":\"19#🔥修改缓存目录和全局目录\",\"111\":\"19#📌搭建项目\",\"112\":\"19#🔥初始化项目\",\"113\":\"19#🔥安装依赖\",\"114\":\"19#📌部署到github\",\"115\":\"19#🔥新建仓库\",\"116\":\"19#🔥推送代码到github\",\"117\":\"19#🔥使用-github-pages-发布站点\",\"118\":\"20\",\"119\":\"20#📌安装所需软件\",\"120\":\"20#🔥anacoda3\",\"121\":\"20#🔥pycharm\",\"122\":\"20#📌安装环境\",\"123\":\"20#🔥cuda\",\"124\":\"20#🔥cudnn\",\"125\":\"20#📌安装环境-1\",\"126\":\"20#🔥创建虚拟环境\",\"127\":\"20#🔥安装pytorch-gpu版\",\"128\":\"20#🔥安装ultralytics库\",\"129\":\"20#📌源码及使用环境\",\"130\":\"20#🔥下载yolo11源码\",\"131\":\"20#🔥pycharm导入环境\",\"132\":\"20#📌验证环境\",\"133\":\"20#🔥numpy版本问题\",\"134\":\"21\",\"135\":\"21#📌数据集\",\"136\":\"21#🔥免费数据集网站-——-roboflow\",\"137\":\"21#🔥导入数据集\",\"138\":\"21#📌模型训练\",\"139\":\"21#🔥训练代码\",\"140\":\"21#🔥测试代码\",\"141\":\"22\",\"142\":\"23\",\"143\":\"24\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,1],\"1\":[1,1],\"2\":[1,1],\"3\":[1,1],\"4\":[1,1],\"5\":[1,13],\"6\":[5],\"7\":[1,34],\"8\":[1,28],\"9\":[3],\"10\":[1,24],\"11\":[1,28],\"12\":[3],\"13\":[1,31],\"14\":[1,36],\"15\":[3,41],\"16\":[2,12],\"17\":[3],\"18\":[1,57],\"19\":[1,1],\"20\":[1],\"21\":[4],\"22\":[1,10],\"23\":[2,5],\"24\":[4],\"25\":[1,7],\"26\":[2,4],\"27\":[2,10],\"28\":[2,22],\"29\":[4,13],\"30\":[2,9],\"31\":[1],\"32\":[1,3],\"33\":[1,28],\"34\":[1,7],\"35\":[1,4],\"36\":[1],\"37\":[2,2],\"38\":[2,1],\"39\":[2],\"40\":[1],\"41\":[1,10],\"42\":[1,31],\"43\":[1,60],\"44\":[1,1],\"45\":[1],\"46\":[1,1],\"47\":[1,24],\"48\":[1,4],\"49\":[1,5],\"50\":[1],\"51\":[2,1],\"52\":[2,1],\"53\":[2],\"54\":[1,29],\"55\":[1,45],\"56\":[1],\"57\":[1,3],\"58\":[1,25],\"59\":[1,5],\"60\":[1,3],\"61\":[1],\"62\":[2,5],\"63\":[2,1],\"64\":[2,4],\"65\":[2,3],\"66\":[2,3],\"67\":[1,57],\"68\":[1,93],\"69\":[1],\"70\":[1],\"71\":[1,25],\"72\":[1,4],\"73\":[1,2],\"74\":[1],\"75\":[2,5],\"76\":[2,2],\"77\":[2],\"78\":[1],\"79\":[1,38],\"80\":[1],\"81\":[1],\"82\":[1,17],\"83\":[1,12],\"84\":[1,12],\"85\":[1],\"86\":[2,3],\"87\":[2,4],\"88\":[2],\"89\":[1],\"90\":[1,29],\"91\":[1],\"92\":[2],\"93\":[1,7],\"94\":[1,4],\"95\":[1,45],\"96\":[2],\"97\":[1,1],\"98\":[1,9],\"99\":[1,75],\"100\":[2],\"101\":[1,10],\"102\":[1,2],\"103\":[1,56],\"104\":[1,1],\"105\":[1],\"106\":[1],\"107\":[2,3],\"108\":[1,6],\"109\":[1,28],\"110\":[1,16],\"111\":[1],\"112\":[1,41],\"113\":[1,111],\"114\":[1],\"115\":[1,14],\"116\":[1,44],\"117\":[4,14],\"118\":[1,2],\"119\":[1],\"120\":[1,23],\"121\":[1,7],\"122\":[1],\"123\":[1,33],\"124\":[1,20],\"125\":[1],\"126\":[1,12],\"127\":[3,27],\"128\":[1,5],\"129\":[1],\"130\":[1,6],\"131\":[1,3],\"132\":[1,35],\"133\":[1,20],\"134\":[1],\"135\":[1],\"136\":[2,8],\"137\":[1,26],\"138\":[1],\"139\":[1,87],\"140\":[1,45],\"141\":[1,3],\"142\":[2],\"143\":[1]},\"averageFieldLength\":[1.3819444444444449,17.405738424224417],\"storedFields\":{\"0\":{\"h\":\"笔记\",\"t\":[\"欢迎来到小鸡的学习笔记✨\"]},\"1\":{\"h\":\"题解\",\"t\":[\"欢迎来到小鸡的题解专题✨\"]},\"2\":{\"h\":\"文档\",\"t\":[\"欢迎来到小鸡的个人文档✨\"]},\"3\":{\"h\":\"项目\",\"t\":[\"欢迎来到小鸡的项目笔记✨\"]},\"4\":{\"h\":\"C++\",\"t\":[\"以下是小鸡的C++学习笔记\"]},\"5\":{\"h\":\"智能指针\",\"t\":[\"C++ 智能指针是用于自动管理动态资源（主要是堆内存）的对象，能够有效防止资源泄漏和重复释放问题。 常见的智能指针包括 auto_ptr、unique_ptr、shared_ptr 和 weak_ptr 。\"]},\"6\":{\"h\":\"📌std::auto_ptr（已废弃）\"},\"7\":{\"h\":\"基本原理\",\"t\":[\"auto_ptr 通过管理权转移的方式避免资源重复释放： 在拷贝时将资源的所有权从一个对象转移给另一个对象，原来的对象指针被置为 nullptr， 确保资源仅被释放一次。\",\"如下例所示，ap1 的所有权被转移给 ap2，ap1 变为 nullptr：\",\"int main() { std::auto_ptr<int> ap1(new int(1)); std::auto_ptr<int> ap2(ap1); *ap2 = 10; //*ap1 = 20; // error ，ap1 已经为 nullptr return 0; }\",\"然而，这种隐式的资源转移容易导致悬空指针或程序崩溃，很多公司已禁止使用。 C++11 后 auto_ptr 被 unique_ptr 所取代。\"]},\"8\":{\"h\":\"模拟实现\",\"t\":[\"namespace ff { template<class T> class auto_ptr { public: auto_ptr(T* ptr = nullptr) :m_ptr(ptr) {} ~auto_ptr() { if (m_ptr != nullptr) { std::cout << \\\"delete: \\\" << m_ptr << std::endl; delete m_ptr; m_ptr = nullptr; } } auto_ptr(auto_ptr<T>& ap) :m_ptr(ap.m_ptr) { ap.m_ptr = nullptr; } auto_ptr<T>& operator=(auto_ptr<T>& ap) { if (this != &ap) { delete m_ptr; m_ptr = ap.m_ptr; ap.m_ptr = nullptr; } return *this; } T& operator*() { return *m_ptr; } T* operator->() { return &m_ptr; } private: T* m_ptr; }; }\"]},\"9\":{\"h\":\"📌std::unique_ptr\"},\"10\":{\"h\":\"基本原理\",\"t\":[\"unique_ptr 通过禁止拷贝的方式确保资源的唯一拥有权，从而防止重复释放。如下例：\",\"int main() { std::unique_ptr<int> up1 = std::make_unique<int>(0); //std::unique_ptr<int> up2(up1); // 编译错误 return 0; }\",\"但防拷贝其实也不是一个很好的办法，因为总有一些场景需要进行拷贝。 如果想要共享资源，就需要用到 shared_ptr 了。\"]},\"11\":{\"h\":\"模拟实现\",\"t\":[\"namespace ff { template<class T> class unique_ptr { public: unique_ptr(T* ptr = nullptr) :m_ptr(ptr) {} ~unique_ptr() { if (m_ptr != nullptr) { std::cout << \\\"delete: \\\" << m_ptr << std::endl; delete m_ptr; m_ptr = nullptr; } } T& operator*() { return *m_ptr; } T* operator->() { return &m_ptr; } // 禁止拷贝构造与赋值 unique_ptr(unique_ptr<T>& up) = delete; unique_ptr<T>& operator=(unique_ptr<T>& up) = delete; private: T* m_ptr; }; }\"]},\"12\":{\"h\":\"📌std::shared_ptr\"},\"13\":{\"h\":\"基本原理\",\"t\":[\"shared_ptr 采用引用计数机制管理资源：\",\"每块资源关联一个引用计数，记录当前有多少个 shared_ptr 实例共享该资源；\",\"拷贝时引用计数 +1，析构或重新赋值时 -1；\",\"当引用计数降为 0，资源自动释放。\",\"int main() { std::shared_ptr<int> sp1 = std::make_shared<int>(1); { std::shared_ptr<int> sp2(sp1); std::cout << sp1.use_count() << std::endl; // 输出2 } std::cout << sp1.use_count() << std::endl; // 输出1 return 0; }\"]},\"14\":{\"h\":\"模拟实现\",\"t\":[\"namespace ff { template<class T> class shared_ptr { public: shared_ptr(T* ptr = nullptr) : m_ptr(ptr) , m_count(new int(1)) {} ~shared_ptr() { if (--(*m_count) == 0) { if (m_ptr != nullptr) { std::cout << \\\"delete: \\\" << m_ptr << std::endl; delete m_ptr; m_ptr = nullptr; } delete m_count; m_count = nullptr; } } shared_ptr(shared_ptr<T>& sp) : m_ptr(sp.m_ptr) , m_count(sp.m_count) { (*m_count)++; } shared_ptr<T>& operator=(shared_ptr<T>& sp) { if (m_ptr != sp.m_ptr) { if (--(*m_count) == 0) { if (m_ptr != nullptr) { std::cout << \\\"delete:\\\" << m_ptr << std::endl; delete m_ptr; delete m_count; } } m_ptr = sp.m_ptr; m_count = sp.m_count; (*m_count)++; } return *this; } int use_count() { return *m_count; } T& operator*() { return *m_ptr; } T* operator->() { return &m_ptr; } private: T* m_ptr; int* m_count; }; }\"]},\"15\":{\"h\":\"std::shared_ptr的循环引用问题\",\"t\":[\"在某些场景中，多个 shared_ptr 对象可能会相互引用，从而形成循环引用，导致引用计数无法归零，资源泄露。\",\"例如双向链表节点：\",\"struct Point { std::shared_ptr<Point> m_prev; std::shared_ptr<Point> m_next; int m_value; Point(int value) : m_value(value) , m_prev(nullptr) , m_next(nullptr) {} ~Point() { std::cout << \\\"delete: \\\" << m_value << std::endl; } }; int main() { std::shared_ptr<Point> sp1 = std::make_shared<Point>(1); std::shared_ptr<Point> sp2 = std::make_shared<Point>(2); sp1->m_next = sp2; sp2->m_prev = sp1; return 0; }\",\"上述代码中，sp1 和 sp2 相互引用，导致它们的引用计数始终不为 0，程序结束时资源也不会被释放。\"]},\"16\":{\"h\":\"解决方法：使用\",\"t\":[\"std::weak_ptr 是一种不拥有资源的智能指针，可以打破循环引用链。 在设计结构中，建议将一方（通常是“父”指针）改为 weak_ptr。\"]},\"17\":{\"h\":\"📌std::weak_ptr\"},\"18\":{\"h\":\"基本原理\",\"t\":[\"weak_ptr 是为了解决 shared_ptr 的循环引用问题而引入的辅助智能指针，它不拥有资源的所有权，不会影响引用计数。\",\"通过 weak_ptr 观察一个由 shared_ptr 管理的对象，可以在需要时临时提升为 shared_ptr 使用， 如果资源已释放，提升会失败，避免了悬空指针和资源泄露。\",\"使用 lock() 方法可以将 weak_ptr 升级为 shared_ptr，如下所示：\",\"int main() { std::shared_ptr<int> sp = std::make_shared<int>(10); std::weak_ptr<int> wp = sp; if (auto temp = wp.lock()) // 成功提升为 std::shared_ptr { std::cout << *temp << std::endl; } else { std::cout << \\\"资源已释放。\\\" << std::endl; } return 0; }\",\"在解决循环引用时，可以将一方的 shared_ptr 替换为 weak_ptr， 如下改写双向链表的例子：\",\"struct Point { std::weak_ptr<Point> m_prev; // 弱引用，不影响引用计数 std::shared_ptr<Point> m_next; int m_value; Point(int value) : m_value(value) , m_prev{} , m_next(nullptr) {} ~Point() { std::cout << \\\"delete: \\\" << m_value << std::endl; } };\"]},\"19\":{\"h\":\"操作系统\",\"t\":[\"以下是小鸡的操作系统学习笔记\"]},\"20\":{\"h\":\"进程与线程\"},\"21\":{\"h\":\"一、什么是进程(Process)\"},\"22\":{\"h\":\"✅定义\",\"t\":[\"进程是操作系统中正在运行的程序的实例。\",\"每个进程是独立的资源分配单位。\",\"包含： \",\"自己的代码段、数据段\",\"独立的内存空间\",\"系统资源（如打开的文件、设备句柄等）\"]},\"23\":{\"h\":\"📌举个例子：\",\"t\":[\"当你打开一个视频播放器，操作系统会为它创建一个进程，它独立运行，不影响其他程序。\"]},\"24\":{\"h\":\"二、什么是线程(Thread)\"},\"25\":{\"h\":\"✅定义\",\"t\":[\"线程是进程中的一个执行流。\",\"是操作系统调度的最小单位。\",\"线程共享进程的资源（内存、文件等），但有自己的执行栈和寄存器。\"]},\"26\":{\"h\":\"📌举个例子：\",\"t\":[\"一个浏览器进程中可能有多个线程： \",\"一个线程负责页面加载\",\"一个线程负责页面响应\",\"一个线程负责播放视频\"]},\"27\":{\"h\":\"三、进程与线程的联系\",\"t\":[\"说明\",\"所属关系\",\"线程必须依附于进程存在\",\"资源共享\",\"同一进程的线程共享内存和资源\",\"生命周期\",\"线程随进程的启动而存在，随结束而死亡\",\"协作能力\",\"同一进程内的线程可轻松协作\"]},\"28\":{\"h\":\"四、进程与线程的区别\",\"t\":[\"进程\",\"线程\",\"基本概念\",\"独立的运行单位，资源分配和拥有的基本单位\",\"程序执行的基本单位，进程中的执行单位\",\"内存空间\",\"拥有独立的内存空间\",\"共享进程的内存空间\",\"系统开销\",\"创建/切换开销较大\",\"创建/切换开销较小\",\"通信方式\",\"进程间通信较复杂，需要借助操作系统\",\"同一进程内通信非常简单，可以直接读写进程数据段\",\"崩溃影响\",\"一个进程崩溃不影响其他进程\",\"一个线程崩溃可能影响整个进程\"]},\"29\":{\"h\":\"五、为什么操作系统需要“线程”\",\"t\":[\"提高并发性：线程可以在多核 CPU 上并行执行，提高系统效率。\",\"资源利用率高：多个线程共享资源，减少冗余。\",\"响应更快：比如点击按钮后，界面不卡顿，因为有专门的线程处理用户输入。\"]},\"30\":{\"h\":\"六、总结\",\"t\":[\"进程是资源分配单位，线程是调度执行单位。\",\"一个进程至少有一个线程（主线程）。\",\"多线程在提升效率的同时，也带来管理上的复杂性（如同步、死锁等）。\"]},\"31\":{\"h\":\"CPCS\"},\"32\":{\"h\":\"简要题面\",\"t\":[\"给定两个串a，b，求a串中有几个子序列是b串\"]},\"33\":{\"h\":\"题面\",\"t\":[\"在被成功破解上一个宝箱密码后，小鸡大惊失色，连夜更换了密码的生成规则，并重新将宝箱锁好，信心十足地摆在了所有参赛者面前。\",\"这一次，解锁线索更加复杂——宝箱表面刻着两串小写字母 a 和 b，并附言：“若你能算清 a 中有多少子序列等于 b，我便甘拜下风！”\",\"现在，宝箱的最终命运掌握在你手中！\",\"注：子序列是指通过从原始序列中删除某些元素（可能一个、多个或不删除）但不改变剩余元素的相对位置所形成的新序列，例如 sacpc 通过删除元素 a 可以得到子序列 scpc 。\"]},\"34\":{\"h\":\"输入描述\",\"t\":[\"第一行一个字符串 a(1≤∣a∣≤105)\",\"第二行一个字符串 b(1≤∣b∣≤103)\"]},\"35\":{\"h\":\"输出描述\",\"t\":[\"一行一个数字表示答案\",\"由于答案可能过大，请对998244353 ****取模\"]},\"36\":{\"h\":\"输入输出样例\"},\"37\":{\"h\":\"输入 #1\",\"t\":[\"scppcsscpspccsp scpc\"]},\"38\":{\"h\":\"输出 #1\",\"t\":[\"28\"]},\"39\":{\"h\":\"说明/提示\"},\"40\":{\"h\":\"解法\"},\"41\":{\"h\":\"\",\"t\":[\"令 dp[i] 表示 a 处理到当前字符时，以 b[i] 结尾的匹配子序列个数。\"]},\"42\":{\"h\":\"\",\"t\":[\"维护 dp 数组，其中 dp[j] 代表当前在 a 中匹配 b 的第 j 个字符的子序列数量。\",\"遍历 a 中的每个字符 a[i]： \",\"如果 a[i] == b[j]，则 dp[j] 可以由 dp[j-1] 贡献而来，即 dp[j] += dp[j-1]。\",\"若 a[i] 恰好等于 b[0]，则 dp[0] 自增，即 dp[0] += 1。\",\"采用倒序更新 dp[j]，避免更新 dp[j] 时影响 dp[j-1] 的值。\"]},\"43\":{\"h\":\"参考程序\",\"t\":[\"#include<bits/stdc++.h> using namespace std; typedef long long ll; const ll mod=998244353; ll dp[1005]; vector<int>vec[30]; int main(){ ios::sync_with_stdio(0),cin.tie(0),cout.tie(0); string a,b; cin>>a>>b; for(int i=1;i<b.size();i++){ vec[b[i]-'a'].push_back(i); } for(int i=0;i<='z'-'a';i++){ sort(vec[i].begin(),vec[i].end(),greater<int>()); } for(int i=0;i<a.size();i++){ for(auto j:vec[a[i]-'a']){ dp[j]=(dp[j-1]+dp[j])%mod; } if(a[i]==b[0]) dp[0]=(dp[0]+1)%mod; } cout<<dp[b.size()-1]<<'\\\\n'; return 0; }\"]},\"44\":{\"h\":\"中南民族大学程序设计竞赛\",\"t\":[\"这里放一些校赛自己出的题目\"]},\"45\":{\"h\":\"SCPC\"},\"46\":{\"h\":\"简要题面\",\"t\":[\"字符串中有多少子序列是scpc\"]},\"47\":{\"h\":\"题面\",\"t\":[\"中南民族大学第七届程序设计竞赛火热进行中！当你正专注解题时，意外在小鸡留下的神秘宝箱前驻足。小鸡自信地认为无人能破解密码，竟将解锁线索大大方方刻在了宝箱表面！\",\"锈迹斑驳的箱体上篆刻着一串神秘的小写字母字符串，而你敏锐地发现：这个字符串中所有能组合成 scpc 的子序列数量，正是开启这个宝箱的关键密码！\",\"那么，聪明的你可以打开小鸡的宝箱吗？\",\"注：子序列是指通过从原始序列中删除某些元素（可能一个、多个或不删除）但不改变剩余元素的相对位置所形成的新序列，例如 sacpc 通过删除元素 a 可以得到子序列 scpc 。\"]},\"48\":{\"h\":\"输入描述\",\"t\":[\"一行一个字符串 s(1≤∣s∣≤107)\"]},\"49\":{\"h\":\"输出描述\",\"t\":[\"一行一个数字表示答案\",\"由于答案可能过大，请对 998244353 取模\"]},\"50\":{\"h\":\"输入输出样例\"},\"51\":{\"h\":\"输入 #1\",\"t\":[\"scppcsscpspccsp\"]},\"52\":{\"h\":\"输出 #1\",\"t\":[\"28\"]},\"53\":{\"h\":\"说明/提示\"},\"54\":{\"h\":\"解法\",\"t\":[\"用动态规划来维护子序列的计数。我们用 dp[i] 表示形成前 i 个字符的部分子序列数量，其中：\",\"dp[1] 统计 s 的数量\",\"dp[2] 统计 sc 的数量\",\"dp[3] 统计 scp 的数量\",\"dp[4] 统计 scpc 的数量（最终答案）\",\"遍历字符串时，我们根据不同的字符进行如下转移：\",\"遇到 's'： \",\"dp[1] += 1，即统计 s 的出现次数\",\"遇到 'c'： \",\"dp[4] += dp[3]，即 scpc 的个数增加 scp 的个数\",\"dp[2] += dp[1]，即 sc 的个数增加 s 的个数\",\"遇到 'p'： \",\"dp[3] += dp[2]，即 scp 的个数增加 sc 的个数\"]},\"55\":{\"h\":\"参考程序\",\"t\":[\"#include<bits/stdc++.h> using namespace std; typedef long long ll; const ll mod=998244353; ll dp[5]; int main(){ string s; cin>>s; s=\\\" \\\"+s; for(int i=1;i<s.length();i++){ if(s[i]=='s'){ dp[1]=(dp[1]+1)%mod; } else if(s[i]=='c'){ dp[4]=(dp[4]+dp[3])%mod; dp[2]=(dp[1]+dp[2])%mod; } else if(s[i]=='p'){ dp[3]=(dp[2]+dp[3])%mod; } } cout<<dp[4]<<'\\\\n'; return 0; }\"]},\"56\":{\"h\":\"小鸡计算器\"},\"57\":{\"h\":\"简要题面\",\"t\":[\"给定一个包含+ - * / ( ) 的表达式，输出运算结果\"]},\"58\":{\"h\":\"题面\",\"t\":[\"被聪明的参赛者们打开了第一个宝箱后，小鸡发誓要夺回属于她的一切！\",\"她翻开珍藏的魔法书，虔诚地召唤出伟大的神明。神明被她的执着打动，赐予了一个能够帮助她找回丢失宝藏的神奇法宝。不过，这个法宝被施加了层层禁制，需要逐一解开才能激活。\",\"此刻，法宝周围浮现出一串串神秘的数字算式。小鸡明白，只有正确解出所有的算式，才能彻底激活法宝，最终找回失落的宝藏。然而，长时间没有动脑筋的小鸡，已经对这些数字感到力不从心。于是，她决定寻求善良的你的帮助，助她一臂之力，破解谜题，激活法宝，找回属于她的宝藏！\"]},\"59\":{\"h\":\"输入描述\",\"t\":[\"一行一个包含 + - * / ( ) 的表达式，保证表达式合法并且数字不含负数。\"]},\"60\":{\"h\":\"输出描述\",\"t\":[\"一行一个数字表示表达式的值\",\"若结果不为整数，请用最简分数表示\"]},\"61\":{\"h\":\"输入输出样例\"},\"62\":{\"h\":\"输入 #1\",\"t\":[\"6*5/2-(3+8)\"]},\"63\":{\"h\":\"输出 #1\",\"t\":[\"4\"]},\"64\":{\"h\":\"输入 #2\",\"t\":[\"3/(2-8)\"]},\"65\":{\"h\":\"输出 #2\",\"t\":[\"-1/2\"]},\"66\":{\"h\":\"说明/提示\",\"t\":[\"题目只保证初始表达式中不含负数，计算过程中可能出现负数。\"]},\"67\":{\"h\":\"解法\",\"t\":[\"计算表达式时，我们维护两个栈：\",\"数值栈 num：存储当前的数值（分数形式 pair<分子, 分母>）。\",\"运算符栈 op：存储当前的操作符 + - * / 和括号 ()。\",\"计算规则：\",\"遇到数字：解析完整数字后，将其压入 num 栈，默认分母为 1（整数）。\",\"遇到运算符 + - * /： \",\"若运算符栈 op非空，并且栈顶运算符的优先级不低于当前运算符，则先计算栈顶运算，直到遇到低优先级的运算符或 (。\",\"之后再将当前运算符入栈。\",\"遇到 (：直接入 op 栈。\",\"遇到 )： \",\"依次执行 op 栈中的运算，直到匹配到 (，然后弹出 (。\",\"处理剩余的运算：遍历结束后，栈中可能仍有运算符，需要依次弹出执行，直到 op 为空。\",\"由于 * / 可能会产生分数，需要实现分数的四则运算，并保证最简分数表示：\",\"加法：\",\"ba​+dc​=b×da×d+b×c​\",\"减法： ba​−dc​=b×da×d−b×c​\",\"乘法： ba​×dc​=b×da×c​\",\"除法： ba​÷dc​=b×ca×d​\",\"计算后需求 最大公因数（gcd），将分数化为最简形式。\"]},\"68\":{\"h\":\"参考程序\",\"t\":[\"#include<bits/stdc++.h> using namespace std; typedef long long ll; stack<pair<ll,ll>> num; stack<char> op; map<char,int> mp; pair<ll,ll> mul(pair<ll,ll> a,pair<ll,ll> b){ ll fz=a.first*b.first; ll fm=a.second*b.second; ll gcd=__gcd(fz,fm); fz/=gcd; fm/=gcd; return {fz,fm}; } pair<ll,ll> div(pair<ll,ll> a,pair<ll,ll> b){ ll fz=a.first*b.second; ll fm=a.second*b.first; ll gcd=__gcd(fz,fm); fz/=gcd; fm/=gcd; return {fz,fm}; } pair<ll,ll> add(pair<ll,ll> a,pair<ll,ll> b){ ll fz=a.first*b.second+a.second*b.first; ll fm=a.second*b.second; ll gcd=__gcd(fz,fm); fz/=gcd; fm/=gcd; return {fz,fm}; } pair<ll,ll> sub(pair<ll,ll> a,pair<ll,ll> b){ ll fz=a.first*b.second-a.second*b.first; ll fm=a.second*b.second; ll gcd=__gcd(fz,fm); fz/=gcd; fm/=gcd; return {fz,fm}; } int main(){ ios::sync_with_stdio(0),cin.tie(0),cout.tie(0); ll temp=0; mp['(']=mp[')']=0; mp['+']=mp['-']=1; mp['*']=mp['/']=2; string s; cin>>s; for(int i=0;i<s.length();i++){ if(s[i]>='0'&&s[i]<='9'){ temp*=10; temp+=s[i]-'0'; } else{ if(i>0&&s[i-1]>='0'&&s[i-1]<='9'){ num.push({temp,1}); temp=0; } if(s[i]=='(') op.push(s[i]); else if(s[i]==')'){ while(op.top()!='('){ pair<ll,ll> a=num.top(); num.pop(); pair<ll,ll> b=num.top(); num.pop(); if(op.top()=='*') num.push(mul(b,a)); else if(op.top()=='/') num.push(div(b,a)); else if(op.top()=='+') num.push(add(b,a)); else num.push(sub(b,a)); op.pop(); } op.pop(); } else{ while(!op.empty()&&(mp[op.top()]>=mp[s[i]])){ pair<ll,ll> a=num.top(); num.pop(); pair<ll,ll> b=num.top(); num.pop(); if(op.top()=='*') num.push(mul(b,a)); else if(op.top()=='/') num.push(div(b,a)); else if(op.top()=='+') num.push(add(b,a)); else num.push(sub(b,a)); op.pop(); } op.push(s[i]); } } } if(s[s.length()-1]>='0'&&s[s.length()-1]<='9') num.push({temp,1}); while(!op.empty()){ pair<ll,ll> a=num.top(); num.pop(); pair<ll,ll> b=num.top(); num.pop(); if(op.top()=='*') num.push(mul(b,a)); else if(op.top()=='/') num.push(div(b,a)); else if(op.top()=='+') num.push(add(b,a)); else num.push(sub(b,a)); op.pop(); } pair<ll,ll> ans=num.top(); if(ans.second<0){ ans.first=-ans.first; ans.second=-ans.second; } if(ans.second==1) cout<<ans.first<<'\\\\n'; else cout<<ans.first<<'/'<<ans.second<<'\\\\n'; return 0; }\"]},\"69\":{\"h\":\"我不想当组长\"},\"70\":{\"h\":\"简要题面\"},\"71\":{\"h\":\"题面\",\"t\":[\"众所周知，老师们都热衷于分组学习，这一天芳芳来到了一个有n位同学的新班级，每位同学都有一个独一无二的序号，从1到n，毫无意外，这个班的老师也要求分组学习。\",\"每个人都想和自己最好的朋友在同一个小组，善良的老师愿意满足每个人的小心愿，所以老师让每一位同学把自己最好的朋友的序号写在纸上按顺序交给她。分完组后老师发现没有人愿意当小组长，于是决定让每一组序号最小的同学担任小组长。\",\"这一天，老师照常的走进教室，拿出她的小组长名单准备了解每一组的学习情况，但她突然发现名单不见了。老师在包里翻找了半天，最后只找到了写着每一位同学最好的朋友序号的小纸条，幸运的是纸条的顺序还没有被打乱，最上方的纸条是1号同学写的，最下方的纸条是n号同学写的。\",\"为了不让同学们发现老师弄丢了小组长名单，她需要在上课之前根据纸条上的信息找到所有的小组长，你可以帮帮她吗？\"]},\"72\":{\"h\":\"输入描述\",\"t\":[\"第一行输入n，表示学生人数\",\"接下来n行每行一个数字，表示每位同学最好的朋友的序号\"]},\"73\":{\"h\":\"输出描述\",\"t\":[\"按序号从小到大输出所有小组长的序号，每行一个序号\"]},\"74\":{\"h\":\"输入输出样例\"},\"75\":{\"h\":\"输入 #1\",\"t\":[\"5 5 3 2 1 4\"]},\"76\":{\"h\":\"输出 #1\",\"t\":[\"1 2\"]},\"77\":{\"h\":\"说明/提示\"},\"78\":{\"h\":\"解法\"},\"79\":{\"h\":\"参考程序\",\"t\":[\"#include<bits/stdc++.h> using namespace std; int fa[100005]; int find(int x){ if(x!=fa[x]) return fa[x]=find(fa[x]); return x; } int main(){ int n; cin>>n; for(int i=1;i<=n;i++){ fa[i]=i; } for(int i=1;i<=n;i++){ int temp; cin>>temp; int ni=find(i),nt=find(temp); if(ni!=nt){ if(ni<nt) fa[nt]=ni; else fa[ni]=nt; } } for(int i=1;i<=n;i++){ if(i==find(i)) cout<<i<<'\\\\n'; } return 0; }\"]},\"80\":{\"h\":\"最后的才是最好的\"},\"81\":{\"h\":\"简要题面\"},\"82\":{\"h\":\"题面\",\"t\":[\"小连和小张都是芳芳的好队友，这一天芳芳旅游回来给他们俩带了n个特产让他们自己分。为了有趣，小连和小张规定了一种分配方式：轮流拿取特产，每人每次最多拿m个特产，不可以不拿。他们都认为最后的特产才是最好的，所以他们都会想方设法拿到最后一个特产，公平起见，由芳芳给出x的数值，小连和小张猜拳决定拿取顺序，获胜的人先拿。\",\"芳芳想知道谁拿到了最后一个特产，但是她不想等待漫长的分配过程，所以聪明的你可以告诉她吗？\"]},\"83\":{\"h\":\"输入描述\",\"t\":[\"一行输入三个整数n,m,w(1<=n<=10^18,1<=m<=n,0<=w<=1)，n表示特产数量，m表示每人每次最多可以拿取的数量，w表示猜拳的结果，1表示小连获胜，0表示小张获胜。\"]},\"84\":{\"h\":\"输出描述\",\"t\":[\"小张拿到最后一个特产则输出一行 Zhang get it!\",\"小连拿到最后一个特产则输出一行 Lian get it!\",\"无法确定则输出一行 I don't know!\"]},\"85\":{\"h\":\"输入输出样例\"},\"86\":{\"h\":\"输入 #1\",\"t\":[\"10 3 1\"]},\"87\":{\"h\":\"输出 #1\",\"t\":[\"Lian get it!\"]},\"88\":{\"h\":\"说明/提示\"},\"89\":{\"h\":\"解法\"},\"90\":{\"h\":\"参考程序\",\"t\":[\"#include<bits/stdc++.h> using namespace std; typedef long long ll; int main(){ ll n,m; bool w; cin>>n>>m>>w; if(n%(m+1)==1){ if(w==1) cout<<\\\"Zhang get it!\\\\n\\\"; else cout<<\\\"Lian get it!\\\\n\\\"; } else{ if(w==1) cout<<\\\"Lian get it!\\\\n\\\"; else cout<<\\\"Zhang get it!\\\\n\\\"; } return 0; }\"]},\"91\":{\"h\":\"20250322网易互娱游戏研发\"},\"92\":{\"h\":\"1. 股神小易\"},\"93\":{\"h\":\"题面\",\"t\":[\"n 天 m 支股票，求最大收益，输出每天买卖情况。\"]},\"94\":{\"h\":\"解法\",\"t\":[\"贪心，每天选择一支收益最大的全买，第二天全部卖出。\"]},\"95\":{\"h\":\"参考程序\",\"t\":[\"#include<bits/stdc++.h> using namespace std; double a[30][20005]; int ans[30][3]; int main(){ int n,m; double k; cin>>n>>m>>k; for(int i=1;i<=n;i++){ for(int j=1;j<=m;j++){ cin>>a[i][j]; } } for(int i=2;i<=n;i++){ double tmp=1; for(int j=1;j<=m;j++){ if(a[i][j]/a[i-1][j]>tmp){ ans[i-1][2]=j; ans[i][1]=j; tmp=a[i][j]/a[i-1][j]; } } k*=tmp; } printf(\\\"%.4lf\\\\n\\\",k); for(int i=1;i<=n;i++){ cout<<ans[i][1]-1<<' '<<ans[i][2]-1<<'\\\\n'; } return 0; }\"]},\"96\":{\"h\":\"2. 2048\"},\"97\":{\"h\":\"题面\",\"t\":[\"模拟2048游戏的运行结果\"]},\"98\":{\"h\":\"解法\",\"t\":[\"直接模拟即可，需要注意以下情况：\",\"三个相同数字合并时 1 1 1 0 需要合并成 2 1 0 0\",\"2 2 4 0 只会合并成 4 4 0 0\"]},\"99\":{\"h\":\"参考程序\",\"t\":[\"#include<bits/stdc++.h> using namespace std; typedef long long ll; ll a[40][40]; int v[40][40]; int op[50]; int main(){ int t; cin>>t; while(t--){ int c; cin>>c; for(int i=1;i<=c;i++){ cin>>op[i]; } int m,n; cin>>m>>n; for(int i=1;i<=m;i++){ for(int j=1;j<=n;j++){ cin>>a[i][j]; } } for(int k=1;k<=c;k++){ for(int i=1;i<=m;i++){ for(int j=1;j<=n;j++){ v[i][j]=0; } } if(op[k]==0){ for(int j=1;j<=n;j++){ for(int i=1;i<=m;i++){ if(a[i][j]==0) continue; for(int ii=i;ii>1;ii--){ if(a[ii][j]==a[ii-1][j]){ if(v[ii-1][j]) break; v[ii-1][j]=1; a[ii-1][j]*=2; a[ii][j]=0; break; } else if(a[ii-1][j]==0){ a[ii-1][j]=a[ii][j]; a[ii][j]=0; } else break; } } } } else if(op[k]==2){ for(int j=1;j<=n;j++){ for(int i=m;i>=1;i--){ if(a[i][j]==0) continue; for(int ii=i;ii<m;ii++){ if(a[ii][j]==a[ii+1][j]){ if(v[ii+1][j]) break; v[ii+1][j]=1; a[ii+1][j]*=2; a[ii][j]=0; break; } else if(a[ii+1][j]==0){ a[ii+1][j]=a[ii][j]; a[ii][j]=0; } else break; } } } } else if(op[k]==1){ for(int i=1;i<=m;i++){ for(int j=1;j<=n;j++){ if(a[i][j]==0) continue; for(int jj=j;jj>1;jj--){ if(a[i][jj]==a[i][jj-1]){ if(v[i][jj-1]) break; v[i][jj-1]=1; a[i][jj-1]*=2; a[i][jj]=0; break; } else if(a[i][jj-1]==0){ a[i][jj-1]=a[i][jj]; a[i][jj]=0; } else break; } } } } else{ for(int i=1;i<=m;i++){ for(int j=n;j>=1;j--){ if(a[i][j]==0) continue; for(int jj=j;jj<n;jj++){ if(a[i][jj]==a[i][jj+1]){ if(v[i][jj+1]) break; v[i][jj+1]=1; a[i][jj+1]*=2; a[i][jj]=0; break; } else if(a[i][jj+1]==0){ a[i][jj+1]=a[i][jj]; a[i][jj]=0; } else break; } } } } } for(int i=1;i<=m;i++){ for(int j=1;j<=n;j++){ cout<<a[i][j]<<' '; } cout<<'\\\\n'; } } return 0; }\"]},\"100\":{\"h\":\"3. 星际探险\"},\"101\":{\"h\":\"题面\",\"t\":[\"解四元一次方程 ?x + ?y + ?z + ?w = n\",\"变量范围0-2500\"]},\"102\":{\"h\":\"解法\",\"t\":[\"范围不大，跑三层循环剪枝一下就过了\"]},\"103\":{\"h\":\"参考程序\",\"t\":[\"#include<bits/stdc++.h> using namespace std; typedef long long ll; int main(){ ll x,y,z,w,n; cin>>x>>y>>z>>w>>n; int flag=0; ll tmp; for(int i=0;i<=2500;i++){ if(flag) break; tmp=n-i*x; if(w*2500+z*2500+y*2500<tmp) continue; if(tmp<0) break; for(int j=0;j<=2500;j++){ if(flag) break; tmp=n-i*x-j*y; if(w*2500+z*2500<tmp) continue; if(tmp<0) break; for(int k=0;k<=2500;k++){ tmp=n-i*x-j*y-k*z; if(w*2500<tmp) continue; if(tmp<0) break; if(w){ if(tmp%w==0){ cout<<i<<' '<<j<<' '<<k<<' '<<tmp/w<<'\\\\n'; flag=1; break; } } else{ if(tmp==0) cout<<i<<' '<<j<<' '<<k<<' '<<0<<'\\\\n'; flag=1; break; } } } } if(!flag) cout<<-1; return 0; }\"]},\"104\":{\"h\":\"笔试\",\"t\":[\"这里放一些做过的笔试题\"]},\"105\":{\"h\":\"使用VuePress搭建个人博客\"},\"106\":{\"h\":\"📌准备工作\"},\"107\":{\"h\":\"🔥下载Node.js\",\"t\":[\"下载地址：node.js\"]},\"108\":{\"h\":\"🔥添加两个文件夹\",\"t\":[\"在安装路径的根目录下新建 node_cache 和 node_global 文件夹\"]},\"109\":{\"h\":\"🔥环境变量\",\"t\":[\"在系统变量里新建 NODE_HOME ,变量值为刚刚的安装路径 D:\\\\Nodejs\",\"在系统变量的 path 中添加:\",\"%NODE_HOME%\",\"%NODE_HOME%node_cache\",\"%NODE_HOME%node_global\",\"将用户变量的 path 中默认的 C:\\\\User\\\\35025\\\\AppDate\\\\Roaming\\\\npm 改为 node_global 的路径 D:\\\\Nodejs\\\\node_global\",\"在 cmd 窗口输入 node -v 和 npm -v ,能够正确显示版本号说明安装成功\"]},\"110\":{\"h\":\"🔥修改缓存目录和全局目录\",\"t\":[\"用管理员模式打开 cmd 窗口执行以下指令\",\"设置缓存到 node_cache 文件夹：\",\"npm config set cache \\\"D:\\\\Nodejs\\\\node_cache\\\"\",\"设置全局模块的安装路径到 node_global 文件夹：\",\"npm config set prefix \\\"D:\\\\Nodejs\\\\node_global\\\"\"]},\"111\":{\"h\":\"📌搭建项目\"},\"112\":{\"h\":\"🔥初始化项目\",\"t\":[\"使用 vuepress-theme-hope 主题提供的脚手架工具创建项目\",\"用管理员模式打开 cmd 窗口\",\"切换到想要放置项目的路径\",\"例如要切换到 E:\\\\Project ，执行 e: 切换到 E 盘，执行 cd Project 进入 Project 目录\",\"执行以下命令：\",\"npm init vuepress-theme-hope blogs\",\"这里的 blogs 是你项目所在的文件夹名称，可以换\",\"选择一些默认的配置：\",\"选择包管理器 npm\",\"设置协议 MIT\",\"项目需要用到多语言么 NO\",\"你想要创建什么类型的项目 docs\",\"是否需要一个自动部署文档到 GitHub Pages 的工作流 YES\",\"选择你想使用的源 当前源\"]},\"113\":{\"h\":\"🔥安装依赖\",\"t\":[\"由于一个个安装容易导致依赖冲突，所以直接一步到位\",\"打开刚刚下载下来的 blogs 文件夹，修改 src 目录下的 package.json 文件为以下内容\",\"{ \\\"name\\\": \\\"vuepress-theme-hope-template\\\", \\\"description\\\": \\\"A project of vuepress-theme-hope\\\", \\\"version\\\": \\\"2.0.0\\\", \\\"license\\\": \\\"MIT\\\", \\\"type\\\": \\\"module\\\", \\\"scripts\\\": { \\\"docs:build\\\": \\\"vuepress-vite build src\\\", \\\"docs:clean-dev\\\": \\\"vuepress-vite dev src --clean-cache\\\", \\\"docs:dev\\\": \\\"vuepress-vite dev src\\\", \\\"docs:update-package\\\": \\\"npx vp-update\\\" }, \\\"devDependencies\\\": { \\\"@types/katex\\\": \\\"0.16.7\\\", \\\"@vue/repl\\\": \\\"4.4.2\\\", \\\"@vuepress/bundler-vite\\\": \\\"2.0.0-rc.15\\\", \\\"@vuepress/bundler-webpack\\\": \\\"2.0.0-rc.15\\\", \\\"@vuepress/helper\\\": \\\"2.0.0-rc.47\\\", \\\"@vuepress/plugin-feed\\\": \\\"2.0.0-rc.47\\\", \\\"@vuepress/plugin-revealjs\\\": \\\"2.0.0-rc.48\\\", \\\"@vueuse/core\\\": \\\"11.1.0\\\", \\\"@waline/client\\\": \\\"^3.3.2\\\", \\\"artplayer\\\": \\\"5.1.7\\\", \\\"echarts-wordcloud\\\": \\\"2.1.0\\\", \\\"flowchart.ts\\\": \\\"3.0.1\\\", \\\"katex\\\": \\\"0.16.11\\\", \\\"kotlin-playground\\\": \\\"1.30.0\\\", \\\"markmap-lib\\\": \\\"0.17.0\\\", \\\"markmap-toolbar\\\": \\\"0.17.0\\\", \\\"markmap-view\\\": \\\"0.17.0\\\", \\\"mermaid\\\": \\\"11.2.1\\\", \\\"sandpack-vue3\\\": \\\"3.1.11\\\", \\\"sass-embedded\\\": \\\"1.79.3\\\", \\\"sass-loader\\\": \\\"16.0.2\\\", \\\"vue\\\": \\\"3.5.8\\\", \\\"vuepress\\\": \\\"2.0.0-rc.15\\\", \\\"vuepress-plugin-components\\\": \\\"2.0.0-rc.54\\\", \\\"vuepress-plugin-md-enhance\\\": \\\"2.0.0-rc.54\\\", \\\"vuepress-plugin-search-pro\\\": \\\"^2.0.0-rc.54\\\", \\\"vuepress-shared\\\": \\\"2.0.0-rc.54\\\", \\\"vuepress-theme-hope\\\": \\\"2.0.0-rc.56\\\" } }\",\"\\\"devDependencies\\\" 里面的内容不要改，直接复制粘贴就好\",\"用管理员模式在项目根目录执行以下命令，等待自动下载：\",\"npm install\",\"下载完成后执行以下命令即可在本地打开博客：\",\"npm run docs:dev\",\"执行过程中出现 vuepress-theme-hope: ✖ @vuepress/plugin-redirect is not installed! 的报错是正常的，不需要管，也不要下载这个插件\"]},\"114\":{\"h\":\"📌部署到Github\"},\"115\":{\"h\":\"🔥新建仓库\",\"t\":[\"如果使用的仓库名与用户名不相同，需要修改 src 目录下 config.ts 文件中的 base 路径信息为：\",\"base: \\\"/你的仓库名/\\\",\",\"新建仓库的时候不要创建 README.md 文件\"]},\"116\":{\"h\":\"🔥推送代码到Github\",\"t\":[\"首先测试一下，当前能不能正确的静态部署\",\"npm run docs:build\",\"初始化 Git 仓库\",\"git init\",\"连接到远程仓库\",\"git remote add origin 你的仓库地址\",\"将当前目录下的所有更改（包括新增、修改或删除的文件）添加到暂存区，准备进行下一次提交\",\"git add .\",\"如果出现有关CRLF、LF之类换行符的报错，执行以下命令之一：\",\"git config --global core.autocrlf true\",\"git add --renormalize .\",\"将当前暂存区中的更改提交到本地 Git 仓库\",\"git commit -m \\\"提交信息\\\"\",\"将本地 Git 仓库中的更改推送到远程仓库\",\"git push origin main\",\"这里的 main 是本地分支名称，如果本地分支不是 main 自行修改，本地分支名称可以在这里查看：\"]},\"117\":{\"h\":\"🔥使用 Github Pages 发布站点\",\"t\":[\"上一步完成推送后，应该会自动生成 gh-pages 分支，前往 GitHub 仓库的设置页面，选择 gh-pages 作为 GitHub Pages 的源。\",\"等待自动部署完成后在当前页面即可访问站点。\"]},\"118\":{\"h\":\"YOLO11环境配置\",\"t\":[\"相关信息\",\"本教程适用于有独立显卡的电脑\"]},\"119\":{\"h\":\"📌安装所需软件\"},\"120\":{\"h\":\"🔥Anacoda3\",\"t\":[\"Anaconda3由于是国外网站下载较慢，推荐通过清华镜像源安装。\",\"选择带有 Anaconda3...Windows...exe 字样的进行下载。\",\"下载完成之后打开Anaconda3进行安装，一直点下一步，选 Just Me\",\"安装路径不建议安装到 C 盘，可以直接复制粘贴修改到 D:\\\\Anaconda3 ,也可以修改到其他路径，最好纯英文路径。\",\"点击下一步后，需要选择添加到环境变量，直接全选安装即可。\"]},\"121\":{\"h\":\"🔥Pycharm\",\"t\":[\"安装Pycharm可以直接去官网下载，速度较快。\",\"往下滑，下载免费的社区版就够用了\",\"下载完成后开始安装，一直点下一步，将安装路径换成C盘以外的其他文件夹\"]},\"122\":{\"h\":\"📌安装环境\"},\"123\":{\"h\":\"🔥CUDA\",\"t\":[\"提示\",\"下载CUDA前需要先查看显卡支持的CUDA版本最高是多少\",\"按下 win+R ，输入 cmd 打开命令行，输入 nvidia-smi 即可查看\",\"上图红框位置显示即为CUDA最高支持版本，本教程CUDA最高版本达到11.8即可，若没有达到则需要更新显卡驱动。\",\"重要\",\"PyTorch 官方目前主要支持 CUDA 12.1 和 CUDA 11.8，对于更高版本的支持可能较为有限，建议和本教程一致，直接安装 CUDA 11.8\",\"可以在官网挑选下载，也可以直接点此下载，选择精简安装即可\",\"安装完成后打开cmd，输入 nvcc -V,如下图所示即安装成功\"]},\"124\":{\"h\":\"🔥cuDNN\",\"t\":[\"进入cuDNN官网，选择与CUDA相匹配版本，下载Windows版本的压缩包文件。。\",\"将压缩包进行解压，解压后得到下图三个文件夹，全选复制进CUDA的文件夹中进行覆盖替换,替换完成后即cuDNN安装完成。\",\"按照本教程下载的CUDA文件夹默认在 C:\\\\Program Files\\\\NVIDIA GPU Computing Toolkit\\\\CUDA\\\\v11.8 目录下。\"]},\"125\":{\"h\":\"📌安装环境\"},\"126\":{\"h\":\"🔥创建虚拟环境\",\"t\":[\"打开 Anaconda prompt,输入以下指令创建一个名为yolov11，python版本为3.10的虚拟环境。\",\"conda create -n yolov11 python=3.10\"]},\"127\":{\"h\":\"🔥安装pytorch（GPU版）\",\"t\":[\"打开 Anaconda prompt,输入以下指令进入yolov11环境\",\"conda activate yolov11\",\"输入下方命令即可安装pytorch,耐心等待安装完成（需要注意关闭加速软件否则会下载失败）\",\"pip install torch==2.0.0+cu118 torchvision==0.15.1+cu118 --extra-index-url https://download.pytorch.org/whl/cu118\"]},\"128\":{\"h\":\"🔥安装ultralytics库\",\"t\":[\"这个库包含了几乎全部运行yolov11所需的环境，输入以下命令后耐心等待即可\",\"pip install ultralytics\"]},\"129\":{\"h\":\"📌源码及使用环境\"},\"130\":{\"h\":\"🔥下载YOLO11源码\",\"t\":[\"进入源码地址进行下载。\",\"首先下载源代码压缩包并解压\",\"下滑找到yolo11n.pt，点击下载\",\"将下载的文件放到刚刚解压的源码根目录下\"]},\"131\":{\"h\":\"🔥Pycharm导入环境\",\"t\":[\"用Pycharm打开刚刚的项目源码，添加新的本地解释器\",\"按下图选择环境后点击确定即可\"]},\"132\":{\"h\":\"📌验证环境\",\"t\":[\"在源码根目录下新建 val.py 文件\",\"from ultralytics import YOLO if __name__ == '__main__': # 加载模型 model = YOLO(model=r'yolo11n.pt') # 进行推理 model.predict(source=r'ultralytics/assets/bus.jpg', # source是要推理的图片路径这里使用yolo自带的图片 save=True, # 是否在推理结束后保存结果 show=True, # 是否在推理结束后显示结果 project='runs/detect', # 结果的保存路径 )\",\"运行后输出如下图即环境正常。\"]},\"133\":{\"h\":\"🔥NumPy版本问题\",\"t\":[\"如果提示NumPy版本不兼容相关的错误\",\"打开 Anaconda prompt ,进入 yolov11 环境\",\"conda activate yolov11\",\"输入以下命令，安装1.23.5版本的NumPy\",\"pip install numpy==1.23.5\",\"使用以下命令可以查看当前的NumPy版本\",\"pip show numpy\"]},\"134\":{\"h\":\"使用YOLO11训练模型\"},\"135\":{\"h\":\"📌数据集\"},\"136\":{\"h\":\"🔥免费数据集网站 —— Roboflow\",\"t\":[\"进入Roboflow官网，注册登录后进入如下页面，点击下图所示位置\",\"进入当前页面搜索自己想要的数据集\",\"选择一个合适的数据集，点击图示位置进入下载\",\"选择yolov11格式的数据集\",\"下载zip格式的数据集\"]},\"137\":{\"h\":\"🔥导入数据集\",\"t\":[\"在项目根目录下新建一个文件夹用来存放导入的数据集，这里使用 dataset 作为存放所有数据集的路径，刚刚下载的数据集解压到 dataset 的 uno 路径下\",\"打开 data.yaml 文件并修改对应信息\",\"增加 path: E:/Download/ultralytics-main/ultralytics-main，路径为项目根目录\",\"train 、 val 、 test 缺省部分修改为存放该数据集的路径\",\"注释掉 roboflow: 以下内容\"]},\"138\":{\"h\":\"📌模型训练\"},\"139\":{\"h\":\"🔥训练代码\",\"t\":[\"在项目根目录下新建 train.py 文件\",\"from ultralytics import YOLO if __name__ == '__main__': model = YOLO('ultralytics/cfg/models/11/yolo11.yaml') model.load('runs/detect/train16/weights/best.pt') results = model.train( data='dataset/uno/data.yaml', epochs=100, imgsz=640, cache=False, batch=16, device='0', single_cls=False, amp=True )\",\"各参数信息\",\"model.load() ：加载预训练模型，这里加载是的上一次训练了100轮的模型，如果不需要可以去掉\",\"data ：数据集配置文件的路径\",\"epochs ：训练轮数\",\"imgsz ：输入图像的尺寸，一般指定为 640*640 像素\",\"cache ：表示是否缓存数据，将数据缓存到内存中可以加速训练，但占用更多内存\",\"batch ：批处理大小，根据自己电脑性能设置\",\"device ：训练使用的设备，'0' 表示使用第一个 GPU（若为 'cpu' 则表示使用 CPU）\",\"single_cls ：是否为单类别检测，False 表示多类别检测，True 表示单类别检测\",\"amp ：是否启用自动混合精度训练（Automatic Mixed Precision），True 表示启用 AMP，有助于加速训练并节省显存\",\"还有一些参数没有列出来，可以自行搜索\",\"直接运行代码，等待训练完成，默认训练结果会保存在 runs/detect 路径下\"]},\"140\":{\"h\":\"🔥测试代码\",\"t\":[\"在项目根目录下新建 test.py 文件\",\"from ultralytics import YOLO if __name__ == '__main__': # 加载模型 model = YOLO(model=r'runs/detect/train17/weights/best.pt') #加载刚刚训练完的模型 # 进行推理 model.predict(source=r'dataset/uno/test/images/IMG_20241104_120135_jpg.rf.1aa0dc9a8d69f838ea9e725080b5d2b8.jpg', # source是要推理的图片路径这里使用数据集提供的图片 save=True, # 是否在推理结束后保存结果 show=True, # 是否在推理结束后显示结果 project='runs/detect', # 结果的保存路径 )\",\"直接运行代码，进入 runs/detect 文件夹查看训练结果\"]},\"141\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"142\":{\"h\":\"Vue Press\"},\"143\":{\"h\":\"YOLO11\"}},\"dirtCount\":0,\"index\":[[\"默认训练结果会保存在\",{\"1\":{\"139\":1}}],[\"默认分母为\",{\"1\":{\"67\":1}}],[\"等待训练完成\",{\"1\":{\"139\":1}}],[\"等待自动部署完成后在当前页面即可访问站点\",{\"1\":{\"117\":1}}],[\"等待自动下载\",{\"1\":{\"113\":1}}],[\"还有一些参数没有列出来\",{\"1\":{\"139\":1}}],[\"有助于加速训练并节省显存\",{\"1\":{\"139\":1}}],[\"训练使用的设备\",{\"1\":{\"139\":1}}],[\"训练轮数\",{\"1\":{\"139\":1}}],[\"根据自己电脑性能设置\",{\"1\":{\"139\":1}}],[\"批处理大小\",{\"1\":{\"139\":1}}],[\"像素\",{\"1\":{\"139\":1}}],[\"各参数信息\",{\"1\":{\"139\":1}}],[\"缺省部分修改为存放该数据集的路径\",{\"1\":{\"137\":1}}],[\"增加\",{\"1\":{\"137\":1}}],[\"路径为项目根目录\",{\"1\":{\"137\":1}}],[\"路径下\",{\"1\":{\"137\":1,\"139\":1}}],[\"路径信息为\",{\"1\":{\"115\":1}}],[\"刚刚下载的数据集解压到\",{\"1\":{\"137\":1}}],[\"点击图示位置进入下载\",{\"1\":{\"136\":1}}],[\"点击下图所示位置\",{\"1\":{\"136\":1}}],[\"点击下载\",{\"1\":{\"130\":1}}],[\"点击下一步后\",{\"1\":{\"120\":1}}],[\"环境\",{\"1\":{\"133\":1}}],[\"运行后输出如下图即环境正常\",{\"1\":{\"132\":1}}],[\"运算符栈\",{\"1\":{\"67\":1}}],[\"结果的保存路径\",{\"1\":{\"132\":1,\"140\":1}}],[\"结尾的匹配子序列个数\",{\"1\":{\"41\":1}}],[\"加载刚刚训练完的模型\",{\"1\":{\"140\":1}}],[\"加载预训练模型\",{\"1\":{\"139\":1}}],[\"加载模型\",{\"1\":{\"132\":1,\"140\":1}}],[\"加法\",{\"1\":{\"67\":1}}],[\"添加新的本地解释器\",{\"1\":{\"131\":1}}],[\"添加到暂存区\",{\"1\":{\"116\":1}}],[\"下滑找到yolo11n\",{\"1\":{\"130\":1}}],[\"下载zip格式的数据集\",{\"1\":{\"136\":1}}],[\"下载windows版本的压缩包文件\",{\"1\":{\"124\":1}}],[\"下载cuda前需要先查看显卡支持的cuda版本最高是多少\",{\"1\":{\"123\":1}}],[\"下载免费的社区版就够用了\",{\"1\":{\"121\":1}}],[\"下载完成后开始安装\",{\"1\":{\"121\":1}}],[\"下载完成后执行以下命令即可在本地打开博客\",{\"1\":{\"113\":1}}],[\"下载完成之后打开anaconda3进行安装\",{\"1\":{\"120\":1}}],[\"下载地址\",{\"1\":{\"107\":1}}],[\"首先下载源代码压缩包并解压\",{\"1\":{\"130\":1}}],[\"首先测试一下\",{\"1\":{\"116\":1}}],[\"耐心等待安装完成\",{\"1\":{\"127\":1}}],[\"替换完成后即cudnn安装完成\",{\"1\":{\"124\":1}}],[\"替换为\",{\"1\":{\"18\":1}}],[\"全选复制进cuda的文件夹中进行覆盖替换\",{\"1\":{\"124\":1}}],[\"建议和本教程一致\",{\"1\":{\"123\":1}}],[\"建议将一方\",{\"1\":{\"16\":1}}],[\"对于更高版本的支持可能较为有限\",{\"1\":{\"123\":1}}],[\"对象可能会相互引用\",{\"1\":{\"15\":1}}],[\"官方目前主要支持\",{\"1\":{\"123\":1}}],[\"重要\",{\"1\":{\"123\":1}}],[\"打开\",{\"1\":{\"126\":1,\"127\":1,\"133\":1,\"137\":1}}],[\"打开命令行\",{\"1\":{\"123\":1}}],[\"打开刚刚下载下来的\",{\"1\":{\"113\":1}}],[\"按照本教程下载的cuda文件夹默认在\",{\"1\":{\"124\":1}}],[\"按下图选择环境后点击确定即可\",{\"1\":{\"131\":1}}],[\"按下\",{\"1\":{\"123\":1}}],[\"按序号从小到大输出所有小组长的序号\",{\"1\":{\"73\":1}}],[\"往下滑\",{\"1\":{\"121\":1}}],[\"速度较快\",{\"1\":{\"121\":1}}],[\"安装1\",{\"1\":{\"133\":1}}],[\"安装完成后打开cmd\",{\"1\":{\"123\":1}}],[\"安装pycharm可以直接去官网下载\",{\"1\":{\"121\":1}}],[\"安装路径不建议安装到\",{\"1\":{\"120\":1}}],[\"选\",{\"1\":{\"120\":1}}],[\"选择yolov11格式的数据集\",{\"1\":{\"136\":1}}],[\"选择一个合适的数据集\",{\"1\":{\"136\":1}}],[\"选择一些默认的配置\",{\"1\":{\"112\":1}}],[\"选择与cuda相匹配版本\",{\"1\":{\"124\":1}}],[\"选择精简安装即可\",{\"1\":{\"123\":1}}],[\"选择带有\",{\"1\":{\"120\":1}}],[\"选择\",{\"1\":{\"117\":1}}],[\"选择你想使用的源\",{\"1\":{\"112\":1}}],[\"选择包管理器\",{\"1\":{\"112\":1}}],[\"字样的进行下载\",{\"1\":{\"120\":1}}],[\"字符串中有多少子序列是scpc\",{\"1\":{\"46\":1}}],[\"推荐通过清华镜像源安装\",{\"1\":{\"120\":1}}],[\"本教程cuda最高版本达到11\",{\"1\":{\"123\":1}}],[\"本教程适用于有独立显卡的电脑\",{\"1\":{\"118\":1}}],[\"本地分支名称可以在这里查看\",{\"1\":{\"116\":1}}],[\"相关信息\",{\"1\":{\"118\":1}}],[\"相互引用\",{\"1\":{\"15\":1}}],[\"作为存放所有数据集的路径\",{\"1\":{\"137\":1}}],[\"作为\",{\"1\":{\"117\":1}}],[\"前往\",{\"1\":{\"117\":1}}],[\"应该会自动生成\",{\"1\":{\"117\":1}}],[\"发布站点\",{\"0\":{\"117\":1}}],[\"准备进行下一次提交\",{\"1\":{\"116\":1}}],[\"包括新增\",{\"1\":{\"116\":1}}],[\"包含\",{\"1\":{\"22\":1}}],[\"连接到远程仓库\",{\"1\":{\"116\":1}}],[\"连夜更换了密码的生成规则\",{\"1\":{\"33\":1}}],[\"仓库的设置页面\",{\"1\":{\"117\":1}}],[\"仓库中的更改推送到远程仓库\",{\"1\":{\"116\":1}}],[\"仓库\",{\"1\":{\"116\":2}}],[\"初始化\",{\"1\":{\"116\":1}}],[\"新建仓库的时候不要创建\",{\"1\":{\"115\":1}}],[\"也可以直接点此下载\",{\"1\":{\"123\":1}}],[\"也可以修改到其他路径\",{\"1\":{\"120\":1}}],[\"也不要下载这个插件\",{\"1\":{\"113\":1}}],[\"也带来管理上的复杂性\",{\"1\":{\"30\":1}}],[\"✖\",{\"1\":{\"113\":1}}],[\"里面的内容不要改\",{\"1\":{\"113\":1}}],[\"^2\",{\"1\":{\"113\":1}}],[\"^3\",{\"1\":{\"113\":1}}],[\"79\",{\"1\":{\"113\":1}}],[\"7\",{\"1\":{\"113\":2}}],[\"org\",{\"1\":{\"127\":1}}],[\"origin\",{\"1\":{\"116\":2}}],[\"of\",{\"1\":{\"113\":1}}],[\"op非空\",{\"1\":{\"67\":1}}],[\"op\",{\"1\":{\"67\":4,\"68\":20,\"99\":4}}],[\"operator\",{\"1\":{\"8\":2,\"11\":2,\"14\":2}}],[\"operator=\",{\"1\":{\"8\":1,\"11\":1,\"14\":1}}],[\"修改或删除的文件\",{\"1\":{\"116\":1}}],[\"修改\",{\"1\":{\"113\":1}}],[\"你的仓库地址\",{\"1\":{\"116\":1}}],[\"你的仓库名\",{\"1\":{\"115\":1}}],[\"你想要创建什么类型的项目\",{\"1\":{\"112\":1}}],[\"你可以帮帮她吗\",{\"1\":{\"71\":1}}],[\"目录下\",{\"1\":{\"115\":1,\"124\":1}}],[\"目录下的\",{\"1\":{\"113\":1}}],[\"目录\",{\"1\":{\"112\":1}}],[\"进行推理\",{\"1\":{\"132\":1,\"140\":1}}],[\"进入当前页面搜索自己想要的数据集\",{\"1\":{\"136\":1}}],[\"进入roboflow官网\",{\"1\":{\"136\":1}}],[\"进入源码地址进行下载\",{\"1\":{\"130\":1}}],[\"进入cudnn官网\",{\"1\":{\"124\":1}}],[\"进入\",{\"1\":{\"112\":1,\"133\":1,\"140\":1}}],[\"进程是资源分配单位\",{\"1\":{\"30\":1}}],[\"进程是操作系统中正在运行的程序的实例\",{\"1\":{\"22\":1}}],[\"进程间通信较复杂\",{\"1\":{\"28\":1}}],[\"进程中的执行单位\",{\"1\":{\"28\":1}}],[\"进程\",{\"1\":{\"28\":1}}],[\"进程与线程的区别\",{\"0\":{\"28\":1}}],[\"进程与线程的联系\",{\"0\":{\"27\":1}}],[\"进程与线程\",{\"0\":{\"20\":1}}],[\"盘\",{\"1\":{\"112\":1,\"120\":1}}],[\"执行过程中出现\",{\"1\":{\"113\":1}}],[\"执行以下命令之一\",{\"1\":{\"116\":1}}],[\"执行以下命令\",{\"1\":{\"112\":1}}],[\"执行\",{\"1\":{\"112\":2}}],[\"切换到\",{\"1\":{\"112\":1}}],[\"切换到想要放置项目的路径\",{\"1\":{\"112\":1}}],[\"切换开销较小\",{\"1\":{\"28\":1}}],[\"切换开销较大\",{\"1\":{\"28\":1}}],[\"设置协议\",{\"1\":{\"112\":1}}],[\"设置全局模块的安装路径到\",{\"1\":{\"110\":1}}],[\"设置缓存到\",{\"1\":{\"110\":1}}],[\"设备句柄等\",{\"1\":{\"22\":1}}],[\"窗口\",{\"1\":{\"112\":1}}],[\"窗口执行以下指令\",{\"1\":{\"110\":1}}],[\"窗口输入\",{\"1\":{\"109\":1}}],[\"用pycharm打开刚刚的项目源码\",{\"1\":{\"131\":1}}],[\"用管理员模式在项目根目录执行以下命令\",{\"1\":{\"113\":1}}],[\"用管理员模式打开\",{\"1\":{\"110\":1,\"112\":1}}],[\"用动态规划来维护子序列的计数\",{\"1\":{\"54\":1}}],[\"能够正确显示版本号说明安装成功\",{\"1\":{\"109\":1}}],[\"能够有效防止资源泄漏和重复释放问题\",{\"1\":{\"5\":1}}],[\"rf\",{\"1\":{\"140\":1}}],[\"roboflow\",{\"0\":{\"136\":1},\"1\":{\"137\":1}}],[\"roaming\",{\"1\":{\"109\":1}}],[\"runs\",{\"1\":{\"132\":1,\"139\":2,\"140\":3}}],[\"run\",{\"1\":{\"113\":1,\"116\":1}}],[\"rc\",{\"1\":{\"113\":11}}],[\"results\",{\"1\":{\"139\":1}}],[\"renormalize\",{\"1\":{\"116\":1}}],[\"remote\",{\"1\":{\"116\":1}}],[\"readme\",{\"1\":{\"115\":1}}],[\"redirect\",{\"1\":{\"113\":1}}],[\"revealjs\",{\"1\":{\"113\":1}}],[\"repl\",{\"1\":{\"113\":1}}],[\"return\",{\"1\":{\"7\":1,\"8\":3,\"10\":1,\"11\":2,\"13\":1,\"14\":4,\"15\":1,\"18\":1,\"43\":1,\"55\":1,\"68\":5,\"79\":3,\"90\":1,\"95\":1,\"99\":1,\"103\":1}}],[\"https\",{\"1\":{\"127\":1}}],[\"helper\",{\"1\":{\"113\":1}}],[\"hope\",{\"1\":{\"112\":2,\"113\":4}}],[\"home\",{\"1\":{\"109\":4}}],[\"h>\",{\"1\":{\"43\":1,\"55\":1,\"68\":1,\"79\":1,\"90\":1,\"95\":1,\"99\":1,\"103\":1}}],[\"🔥测试代码\",{\"0\":{\"140\":1}}],[\"🔥训练代码\",{\"0\":{\"139\":1}}],[\"🔥导入数据集\",{\"0\":{\"137\":1}}],[\"🔥免费数据集网站\",{\"0\":{\"136\":1}}],[\"🔥numpy版本问题\",{\"0\":{\"133\":1}}],[\"🔥下载yolo11源码\",{\"0\":{\"130\":1}}],[\"🔥下载node\",{\"0\":{\"107\":1}}],[\"🔥安装ultralytics库\",{\"0\":{\"128\":1}}],[\"🔥安装pytorch\",{\"0\":{\"127\":1}}],[\"🔥安装依赖\",{\"0\":{\"113\":1}}],[\"🔥创建虚拟环境\",{\"0\":{\"126\":1}}],[\"🔥cudnn\",{\"0\":{\"124\":1}}],[\"🔥cuda\",{\"0\":{\"123\":1}}],[\"🔥pycharm导入环境\",{\"0\":{\"131\":1}}],[\"🔥pycharm\",{\"0\":{\"121\":1}}],[\"🔥anacoda3\",{\"0\":{\"120\":1}}],[\"🔥使用\",{\"0\":{\"117\":1}}],[\"🔥推送代码到github\",{\"0\":{\"116\":1}}],[\"🔥新建仓库\",{\"0\":{\"115\":1}}],[\"🔥初始化项目\",{\"0\":{\"112\":1}}],[\"🔥修改缓存目录和全局目录\",{\"0\":{\"110\":1}}],[\"🔥环境变量\",{\"0\":{\"109\":1}}],[\"🔥添加两个文件夹\",{\"0\":{\"108\":1}}],[\"📌模型训练\",{\"0\":{\"138\":1}}],[\"📌数据集\",{\"0\":{\"135\":1}}],[\"📌验证环境\",{\"0\":{\"132\":1}}],[\"📌源码及使用环境\",{\"0\":{\"129\":1}}],[\"📌安装环境\",{\"0\":{\"122\":1,\"125\":1}}],[\"📌安装所需软件\",{\"0\":{\"119\":1}}],[\"📌部署到github\",{\"0\":{\"114\":1}}],[\"📌搭建项目\",{\"0\":{\"111\":1}}],[\"📌准备工作\",{\"0\":{\"106\":1}}],[\"📌举个例子\",{\"0\":{\"23\":1,\"26\":1}}],[\"📌std\",{\"0\":{\"6\":1,\"9\":1,\"12\":1,\"17\":1}}],[\"笔试\",{\"0\":{\"104\":1}}],[\"笔记\",{\"0\":{\"0\":1}}],[\"跑三层循环剪枝一下就过了\",{\"1\":{\"102\":1}}],[\"范围不大\",{\"1\":{\"102\":1}}],[\"变量值为刚刚的安装路径\",{\"1\":{\"109\":1}}],[\"变量范围0\",{\"1\":{\"101\":1}}],[\"变为\",{\"1\":{\"7\":1}}],[\"yaml\",{\"1\":{\"137\":1,\"139\":2}}],[\"yolo11\",{\"0\":{\"143\":1},\"1\":{\"139\":1}}],[\"yolo11n\",{\"1\":{\"132\":1}}],[\"yolo11环境配置\",{\"0\":{\"118\":1}}],[\"yolo\",{\"1\":{\"132\":2,\"139\":2,\"140\":2}}],[\"yolov11\",{\"1\":{\"126\":1,\"127\":1,\"133\":2}}],[\"yes\",{\"1\":{\"112\":1}}],[\"y\",{\"1\":{\"101\":1,\"103\":3}}],[\"星际探险\",{\"0\":{\"100\":1}}],[\"只会合并成\",{\"1\":{\"98\":1}}],[\"只有正确解出所有的算式\",{\"1\":{\"58\":1}}],[\"模拟2048游戏的运行结果\",{\"1\":{\"97\":1}}],[\"模拟实现\",{\"0\":{\"8\":1,\"11\":1,\"14\":1}}],[\"kotlin\",{\"1\":{\"113\":1}}],[\"katex\",{\"1\":{\"113\":2}}],[\"k<=2500\",{\"1\":{\"103\":1}}],[\"k<=c\",{\"1\":{\"99\":1}}],[\"k=0\",{\"1\":{\"103\":1}}],[\"k=1\",{\"1\":{\"99\":1}}],[\"k++\",{\"1\":{\"99\":1,\"103\":1}}],[\"k\",{\"1\":{\"95\":3,\"99\":3,\"103\":1}}],[\"know\",{\"1\":{\"84\":1}}],[\"贪心\",{\"1\":{\"94\":1}}],[\"求最大收益\",{\"1\":{\"93\":1}}],[\"求a串中有几个子序列是b串\",{\"1\":{\"32\":1}}],[\"支股票\",{\"1\":{\"93\":1}}],[\"天\",{\"1\":{\"93\":1}}],[\"股神小易\",{\"0\":{\"92\":1}}],[\"无法确定则输出一行\",{\"1\":{\"84\":1}}],[\"芳芳想知道谁拿到了最后一个特产\",{\"1\":{\"82\":1}}],[\"获胜的人先拿\",{\"1\":{\"82\":1}}],[\"由芳芳给出x的数值\",{\"1\":{\"82\":1}}],[\"由于一个个安装容易导致依赖冲突\",{\"1\":{\"113\":1}}],[\"由于\",{\"1\":{\"67\":1}}],[\"由于答案可能过大\",{\"1\":{\"35\":1,\"49\":1}}],[\"公平起见\",{\"1\":{\"82\":1}}],[\"他们都认为最后的特产才是最好的\",{\"1\":{\"82\":1}}],[\"轮流拿取特产\",{\"1\":{\"82\":1}}],[\"小连拿到最后一个特产则输出一行\",{\"1\":{\"84\":1}}],[\"小连和小张猜拳决定拿取顺序\",{\"1\":{\"82\":1}}],[\"小连和小张规定了一种分配方式\",{\"1\":{\"82\":1}}],[\"小连和小张都是芳芳的好队友\",{\"1\":{\"82\":1}}],[\"小张拿到最后一个特产则输出一行\",{\"1\":{\"84\":1}}],[\"小鸡明白\",{\"1\":{\"58\":1}}],[\"小鸡发誓要夺回属于她的一切\",{\"1\":{\"58\":1}}],[\"小鸡计算器\",{\"0\":{\"56\":1}}],[\"小鸡自信地认为无人能破解密码\",{\"1\":{\"47\":1}}],[\"小鸡大惊失色\",{\"1\":{\"33\":1}}],[\"x\",{\"1\":{\"79\":6,\"101\":1,\"103\":4}}],[\"接下来n行每行一个数字\",{\"1\":{\"72\":1}}],[\"幸运的是纸条的顺序还没有被打乱\",{\"1\":{\"71\":1}}],[\"拿出她的小组长名单准备了解每一组的学习情况\",{\"1\":{\"71\":1}}],[\"老师在包里翻找了半天\",{\"1\":{\"71\":1}}],[\"老师照常的走进教室\",{\"1\":{\"71\":1}}],[\"老师们都热衷于分组学习\",{\"1\":{\"71\":1}}],[\"善良的老师愿意满足每个人的小心愿\",{\"1\":{\"71\":1}}],[\"毫无意外\",{\"1\":{\"71\":1}}],[\"从1到n\",{\"1\":{\"71\":1}}],[\"从而形成循环引用\",{\"1\":{\"15\":1}}],[\"从而防止重复释放\",{\"1\":{\"10\":1}}],[\"众所周知\",{\"1\":{\"71\":1}}],[\"9\",{\"1\":{\"68\":3}}],[\"998244353\",{\"1\":{\"49\":1}}],[\"<=\",{\"1\":{\"68\":3}}],[\"<<0<<\",{\"1\":{\"103\":1}}],[\"<<tmp\",{\"1\":{\"103\":1}}],[\"<<k<<\",{\"1\":{\"103\":2}}],[\"<<j<<\",{\"1\":{\"103\":2}}],[\"<<ans\",{\"1\":{\"68\":1,\"95\":1}}],[\"<<\",{\"1\":{\"8\":3,\"11\":3,\"13\":4,\"14\":6,\"15\":3,\"18\":7,\"43\":1,\"55\":1,\"99\":1}}],[\"将数据缓存到内存中可以加速训练\",{\"1\":{\"139\":1}}],[\"将下载的文件放到刚刚解压的源码根目录下\",{\"1\":{\"130\":1}}],[\"将压缩包进行解压\",{\"1\":{\"124\":1}}],[\"将安装路径换成c盘以外的其他文件夹\",{\"1\":{\"121\":1}}],[\"将本地\",{\"1\":{\"116\":1}}],[\"将当前暂存区中的更改提交到本地\",{\"1\":{\"116\":1}}],[\"将当前目录下的所有更改\",{\"1\":{\"116\":1}}],[\"将用户变量的\",{\"1\":{\"109\":1}}],[\"将分数化为最简形式\",{\"1\":{\"67\":1}}],[\"将其压入\",{\"1\":{\"67\":1}}],[\"gpu版\",{\"0\":{\"127\":1}}],[\"gpu\",{\"1\":{\"124\":1,\"139\":1}}],[\"gh\",{\"1\":{\"117\":2}}],[\"git\",{\"1\":{\"116\":10}}],[\"github\",{\"0\":{\"117\":1},\"1\":{\"112\":1,\"117\":2}}],[\"global\",{\"1\":{\"108\":1,\"109\":3,\"110\":2,\"116\":1}}],[\"get\",{\"1\":{\"84\":2,\"87\":1,\"90\":4}}],[\"gcd=\",{\"1\":{\"68\":4}}],[\"gcd\",{\"1\":{\"67\":1,\"68\":4}}],[\"greater<int>\",{\"1\":{\"43\":1}}],[\"最好纯英文路径\",{\"1\":{\"120\":1}}],[\"最后的才是最好的\",{\"0\":{\"80\":1}}],[\"最后只找到了写着每一位同学最好的朋友序号的小纸条\",{\"1\":{\"71\":1}}],[\"最下方的纸条是n号同学写的\",{\"1\":{\"71\":1}}],[\"最上方的纸条是1号同学写的\",{\"1\":{\"71\":1}}],[\"最大公因数\",{\"1\":{\"67\":1}}],[\"最终找回失落的宝藏\",{\"1\":{\"58\":1}}],[\"最终答案\",{\"1\":{\"54\":1}}],[\"除法\",{\"1\":{\"67\":1}}],[\"乘法\",{\"1\":{\"67\":1}}],[\"减法\",{\"1\":{\"67\":1}}],[\"减少冗余\",{\"1\":{\"29\":1}}],[\"为了有趣\",{\"1\":{\"82\":1}}],[\"为了不让同学们发现老师弄丢了小组长名单\",{\"1\":{\"71\":1}}],[\"为空\",{\"1\":{\"67\":1}}],[\"为什么操作系统需要\",{\"0\":{\"29\":1}}],[\"处理剩余的运算\",{\"1\":{\"67\":1}}],[\"处理到当前字符时\",{\"1\":{\"41\":1}}],[\"然后弹出\",{\"1\":{\"67\":1}}],[\"然而\",{\"1\":{\"7\":1,\"58\":1}}],[\"依次执行\",{\"1\":{\"67\":1}}],[\"直接运行代码\",{\"1\":{\"139\":1,\"140\":1}}],[\"直接安装\",{\"1\":{\"123\":1}}],[\"直接全选安装即可\",{\"1\":{\"120\":1}}],[\"直接复制粘贴就好\",{\"1\":{\"113\":1}}],[\"直接模拟即可\",{\"1\":{\"98\":1}}],[\"直接入\",{\"1\":{\"67\":1}}],[\"直到\",{\"1\":{\"67\":1}}],[\"直到匹配到\",{\"1\":{\"67\":1}}],[\"直到遇到低优先级的运算符或\",{\"1\":{\"67\":1}}],[\"之后再将当前运算符入栈\",{\"1\":{\"67\":1}}],[\"整数\",{\"1\":{\"67\":1}}],[\"栈中可能仍有运算符\",{\"1\":{\"67\":1}}],[\"栈中的运算\",{\"1\":{\"67\":1}}],[\"栈\",{\"1\":{\"67\":2}}],[\"存储当前的操作符\",{\"1\":{\"67\":1}}],[\"存储当前的数值\",{\"1\":{\"67\":1}}],[\"分支\",{\"1\":{\"117\":1}}],[\"分完组后老师发现没有人愿意当小组长\",{\"1\":{\"71\":1}}],[\"分母>\",{\"1\":{\"67\":1}}],[\"分数形式\",{\"1\":{\"67\":1}}],[\"计算后需求\",{\"1\":{\"67\":1}}],[\"计算规则\",{\"1\":{\"67\":1}}],[\"计算表达式时\",{\"1\":{\"67\":1}}],[\"计算过程中可能出现负数\",{\"1\":{\"66\":1}}],[\"8即可\",{\"1\":{\"123\":1}}],[\"8\",{\"1\":{\"64\":1,\"113\":1,\"123\":2,\"124\":1}}],[\"640\",{\"1\":{\"139\":2}}],[\"6\",{\"1\":{\"62\":1}}],[\"请用最简分数表示\",{\"1\":{\"60\":1}}],[\"请对\",{\"1\":{\"49\":1}}],[\"请对998244353\",{\"1\":{\"35\":1}}],[\"保证表达式合法并且数字不含负数\",{\"1\":{\"59\":1}}],[\"找回属于她的宝藏\",{\"1\":{\"58\":1}}],[\"激活法宝\",{\"1\":{\"58\":1}}],[\"破解谜题\",{\"1\":{\"58\":1}}],[\"助她一臂之力\",{\"1\":{\"58\":1}}],[\"她需要在上课之前根据纸条上的信息找到所有的小组长\",{\"1\":{\"71\":1}}],[\"她决定寻求善良的你的帮助\",{\"1\":{\"58\":1}}],[\"她翻开珍藏的魔法书\",{\"1\":{\"58\":1}}],[\"于是决定让每一组序号最小的同学担任小组长\",{\"1\":{\"71\":1}}],[\"于是\",{\"1\":{\"58\":1}}],[\"长时间没有动脑筋的小鸡\",{\"1\":{\"58\":1}}],[\"才能彻底激活法宝\",{\"1\":{\"58\":1}}],[\"法宝周围浮现出一串串神秘的数字算式\",{\"1\":{\"58\":1}}],[\"此刻\",{\"1\":{\"58\":1}}],[\"需要注意关闭加速软件否则会下载失败\",{\"1\":{\"127\":1}}],[\"需要注意以下情况\",{\"1\":{\"98\":1}}],[\"需要选择添加到环境变量\",{\"1\":{\"120\":1}}],[\"需要修改\",{\"1\":{\"115\":1}}],[\"需要合并成\",{\"1\":{\"98\":1}}],[\"需要实现分数的四则运算\",{\"1\":{\"67\":1}}],[\"需要依次弹出执行\",{\"1\":{\"67\":1}}],[\"需要逐一解开才能激活\",{\"1\":{\"58\":1}}],[\"需要借助操作系统\",{\"1\":{\"28\":1}}],[\"赐予了一个能够帮助她找回丢失宝藏的神奇法宝\",{\"1\":{\"58\":1}}],[\"神明被她的执着打动\",{\"1\":{\"58\":1}}],[\"虔诚地召唤出伟大的神明\",{\"1\":{\"58\":1}}],[\"给定一个包含+\",{\"1\":{\"57\":1}}],[\"给定两个串a\",{\"1\":{\"32\":1}}],[\"5版本的numpy\",{\"1\":{\"133\":1}}],[\"56\",{\"1\":{\"113\":1}}],[\"54\",{\"1\":{\"113\":4}}],[\"50\",{\"1\":{\"99\":1}}],[\"5\",{\"1\":{\"55\":1,\"62\":1,\"75\":2,\"113\":2,\"133\":1}}],[\"遇到运算符\",{\"1\":{\"67\":1}}],[\"遇到数字\",{\"1\":{\"67\":1}}],[\"遇到\",{\"1\":{\"54\":3,\"67\":2}}],[\"48\",{\"1\":{\"113\":1}}],[\"47\",{\"1\":{\"113\":2}}],[\"404\",{\"1\":{\"141\":1}}],[\"40\",{\"1\":{\"99\":4}}],[\"4lf\",{\"1\":{\"95\":1}}],[\"4\",{\"1\":{\"54\":2,\"55\":3,\"63\":1,\"75\":1,\"98\":3,\"113\":2}}],[\"35025\",{\"1\":{\"109\":1}}],[\"3+8\",{\"1\":{\"62\":1}}],[\"3\",{\"0\":{\"100\":1},\"1\":{\"54\":3,\"55\":3,\"64\":1,\"75\":1,\"86\":1,\"95\":1,\"113\":5}}],[\"30\",{\"1\":{\"43\":1,\"95\":2,\"113\":1}}],[\"统计\",{\"1\":{\"54\":4}}],[\"个字符的部分子序列数量\",{\"1\":{\"54\":1}}],[\"个字符的子序列数量\",{\"1\":{\"42\":1}}],[\"我不想当组长\",{\"0\":{\"69\":1}}],[\"我们维护两个栈\",{\"1\":{\"67\":1}}],[\"我们根据不同的字符进行如下转移\",{\"1\":{\"54\":1}}],[\"我们用\",{\"1\":{\"54\":1}}],[\"我便甘拜下风\",{\"1\":{\"33\":1}}],[\"聪明的你可以打开小鸡的宝箱吗\",{\"1\":{\"47\":1}}],[\"那么\",{\"1\":{\"47\":1}}],[\"正是开启这个宝箱的关键密码\",{\"1\":{\"47\":1}}],[\"而你敏锐地发现\",{\"1\":{\"47\":1}}],[\"锈迹斑驳的箱体上篆刻着一串神秘的小写字母字符串\",{\"1\":{\"47\":1}}],[\"竟将解锁线索大大方方刻在了宝箱表面\",{\"1\":{\"47\":1}}],[\"意外在小鸡留下的神秘宝箱前驻足\",{\"1\":{\"47\":1}}],[\"zhang\",{\"1\":{\"84\":1,\"90\":2}}],[\"z\",{\"1\":{\"43\":1,\"101\":1,\"103\":2}}],[\"found\",{\"1\":{\"141\":1}}],[\"for\",{\"1\":{\"43\":4,\"55\":1,\"68\":1,\"79\":3,\"95\":5,\"99\":20,\"103\":3}}],[\"from\",{\"1\":{\"132\":1,\"139\":1,\"140\":1}}],[\"flowchart\",{\"1\":{\"113\":1}}],[\"flag=1\",{\"1\":{\"103\":2}}],[\"flag=0\",{\"1\":{\"103\":1}}],[\"flag\",{\"1\":{\"103\":3}}],[\"feed\",{\"1\":{\"113\":1}}],[\"files\",{\"1\":{\"124\":1}}],[\"find\",{\"1\":{\"79\":1}}],[\"first<<\",{\"1\":{\"68\":2}}],[\"first=\",{\"1\":{\"68\":1}}],[\"first\",{\"1\":{\"68\":9}}],[\"false\",{\"1\":{\"139\":1}}],[\"fa\",{\"1\":{\"79\":6}}],[\"fm\",{\"1\":{\"68\":12}}],[\"fm=a\",{\"1\":{\"68\":4}}],[\"fz\",{\"1\":{\"68\":12}}],[\"fz=a\",{\"1\":{\"68\":4}}],[\"ff\",{\"1\":{\"8\":1,\"11\":1,\"14\":1}}],[\"val\",{\"1\":{\"132\":1,\"137\":1}}],[\"value\",{\"1\":{\"15\":5,\"18\":5}}],[\"v11\",{\"1\":{\"124\":1}}],[\"view\",{\"1\":{\"113\":1}}],[\"vite\",{\"1\":{\"113\":4}}],[\"vue3\",{\"1\":{\"113\":1}}],[\"vueuse\",{\"1\":{\"113\":1}}],[\"vue\",{\"0\":{\"142\":1},\"1\":{\"113\":2}}],[\"vuepress\",{\"1\":{\"112\":2,\"113\":18}}],[\"vp\",{\"1\":{\"113\":1}}],[\"version\",{\"1\":{\"113\":1}}],[\"vec\",{\"1\":{\"43\":4}}],[\"vector<int>vec\",{\"1\":{\"43\":1}}],[\"v\",{\"1\":{\"99\":10,\"109\":2,\"123\":1}}],[\"lf之类换行符的报错\",{\"1\":{\"116\":1}}],[\"lib\",{\"1\":{\"113\":1}}],[\"license\",{\"1\":{\"113\":1}}],[\"lian\",{\"1\":{\"84\":1,\"87\":1,\"90\":2}}],[\"length\",{\"1\":{\"55\":1,\"68\":3}}],[\"ll>\",{\"1\":{\"68\":19}}],[\"ll>>\",{\"1\":{\"68\":1}}],[\"ll\",{\"1\":{\"43\":3,\"55\":3,\"68\":14,\"90\":2,\"99\":2,\"103\":3}}],[\"load\",{\"1\":{\"139\":2}}],[\"loader\",{\"1\":{\"113\":1}}],[\"long\",{\"1\":{\"43\":2,\"55\":2,\"68\":2,\"90\":2,\"99\":2,\"103\":2}}],[\"lock\",{\"1\":{\"18\":2}}],[\"参考程序\",{\"0\":{\"43\":1,\"55\":1,\"68\":1,\"79\":1,\"90\":1,\"95\":1,\"99\":1,\"103\":1}}],[\"时影响\",{\"1\":{\"42\":1}}],[\"避免更新\",{\"1\":{\"42\":1}}],[\"避免了悬空指针和资源泄露\",{\"1\":{\"18\":1}}],[\"采用倒序更新\",{\"1\":{\"42\":1}}],[\"采用引用计数机制管理资源\",{\"1\":{\"13\":1}}],[\"自行修改\",{\"1\":{\"116\":1}}],[\"自增\",{\"1\":{\"42\":1}}],[\"自己的代码段\",{\"1\":{\"22\":1}}],[\"恰好等于\",{\"1\":{\"42\":1}}],[\"若为\",{\"1\":{\"139\":1}}],[\"若没有达到则需要更新显卡驱动\",{\"1\":{\"123\":1}}],[\"若运算符栈\",{\"1\":{\"67\":1}}],[\"若结果不为整数\",{\"1\":{\"60\":1}}],[\"若\",{\"1\":{\"42\":1}}],[\"若你能算清\",{\"1\":{\"33\":1}}],[\"即可查看\",{\"1\":{\"123\":1}}],[\"即统计\",{\"1\":{\"54\":1}}],[\"即\",{\"1\":{\"42\":2,\"54\":3}}],[\"贡献而来\",{\"1\":{\"42\":1}}],[\"则表示使用\",{\"1\":{\"139\":1}}],[\"则先计算栈顶运算\",{\"1\":{\"67\":1}}],[\"则\",{\"1\":{\"42\":2}}],[\"遍历结束后\",{\"1\":{\"67\":1}}],[\"遍历字符串时\",{\"1\":{\"54\":1}}],[\"遍历\",{\"1\":{\"42\":1}}],[\"中默认的\",{\"1\":{\"109\":1}}],[\"中添加\",{\"1\":{\"109\":1}}],[\"中南民族大学第七届程序设计竞赛火热进行中\",{\"1\":{\"47\":1}}],[\"中南民族大学程序设计竞赛\",{\"0\":{\"44\":1}}],[\"中的每个字符\",{\"1\":{\"42\":1}}],[\"中匹配\",{\"1\":{\"42\":1}}],[\"中有多少子序列等于\",{\"1\":{\"33\":1}}],[\"代表当前在\",{\"1\":{\"42\":1}}],[\"jpg\",{\"1\":{\"132\":1,\"140\":2}}],[\"just\",{\"1\":{\"120\":1}}],[\"json\",{\"1\":{\"113\":1}}],[\"js\",{\"0\":{\"107\":1},\"1\":{\"107\":1}}],[\"j>=1\",{\"1\":{\"99\":1}}],[\"j=0\",{\"1\":{\"103\":1}}],[\"j=n\",{\"1\":{\"99\":1}}],[\"j=1\",{\"1\":{\"95\":2,\"99\":6}}],[\"jj+1\",{\"1\":{\"99\":6}}],[\"jj++\",{\"1\":{\"99\":1}}],[\"jj<n\",{\"1\":{\"99\":1}}],[\"jj\",{\"1\":{\"99\":15}}],[\"jj>1\",{\"1\":{\"99\":1}}],[\"jj=j\",{\"1\":{\"99\":2}}],[\"j<=2500\",{\"1\":{\"103\":1}}],[\"j<=n\",{\"1\":{\"99\":6}}],[\"j<=m\",{\"1\":{\"95\":2}}],[\"j++\",{\"1\":{\"95\":2,\"99\":6,\"103\":1}}],[\"j\",{\"1\":{\"42\":10,\"43\":4,\"95\":5,\"99\":28,\"103\":2}}],[\"其中\",{\"1\":{\"42\":1,\"54\":1}}],[\"数据集配置文件的路径\",{\"1\":{\"139\":1}}],[\"数据段\",{\"1\":{\"22\":1}}],[\"数值栈\",{\"1\":{\"67\":1}}],[\"数组\",{\"1\":{\"42\":1}}],[\"维护\",{\"1\":{\"42\":1}}],[\"以下内容\",{\"1\":{\"137\":1}}],[\"以下是小鸡的操作系统学习笔记\",{\"1\":{\"19\":1}}],[\"以下是小鸡的c++学习笔记\",{\"1\":{\"4\":1}}],[\"以\",{\"1\":{\"41\":1}}],[\"表示启用\",{\"1\":{\"139\":1}}],[\"表示单类别检测\",{\"1\":{\"139\":1}}],[\"表示多类别检测\",{\"1\":{\"139\":1}}],[\"表示使用第一个\",{\"1\":{\"139\":1}}],[\"表示是否缓存数据\",{\"1\":{\"139\":1}}],[\"表示每位同学最好的朋友的序号\",{\"1\":{\"72\":1}}],[\"表示学生人数\",{\"1\":{\"72\":1}}],[\"表示形成前\",{\"1\":{\"54\":1}}],[\"表示\",{\"1\":{\"41\":1}}],[\"data=\",{\"1\":{\"139\":1}}],[\"data\",{\"1\":{\"137\":1,\"139\":2}}],[\"dataset\",{\"1\":{\"137\":2,\"139\":1,\"140\":1}}],[\"detect\",{\"1\":{\"132\":1,\"139\":2,\"140\":3}}],[\"device\",{\"1\":{\"139\":1}}],[\"device=\",{\"1\":{\"139\":1}}],[\"devdependencies\",{\"1\":{\"113\":2}}],[\"dev\",{\"1\":{\"113\":5}}],[\"description\",{\"1\":{\"113\":1}}],[\"delete\",{\"1\":{\"8\":3,\"11\":4,\"14\":6,\"15\":1,\"18\":1}}],[\"d\",{\"1\":{\"109\":2,\"110\":2,\"120\":1}}],[\"download\",{\"1\":{\"127\":1,\"137\":1}}],[\"docs\",{\"1\":{\"112\":1,\"113\":5,\"116\":1}}],[\"double\",{\"1\":{\"95\":3}}],[\"don\",{\"1\":{\"84\":1}}],[\"div\",{\"1\":{\"68\":4}}],[\"dp\",{\"1\":{\"41\":1,\"42\":11,\"43\":5,\"54\":12,\"55\":9}}],[\"令\",{\"1\":{\"41\":1}}],[\"取模\",{\"1\":{\"35\":1,\"49\":1}}],[\"第二天全部卖出\",{\"1\":{\"94\":1}}],[\"第二行一个字符串\",{\"1\":{\"34\":1}}],[\"第一行输入n\",{\"1\":{\"72\":1}}],[\"第一行一个字符串\",{\"1\":{\"34\":1}}],[\"输入图像的尺寸\",{\"1\":{\"139\":1}}],[\"输入以下命令\",{\"1\":{\"133\":1}}],[\"输入以下命令后耐心等待即可\",{\"1\":{\"128\":1}}],[\"输入以下指令进入yolov11环境\",{\"1\":{\"127\":1}}],[\"输入以下指令创建一个名为yolov11\",{\"1\":{\"126\":1}}],[\"输入下方命令即可安装pytorch\",{\"1\":{\"127\":1}}],[\"输入\",{\"0\":{\"37\":1,\"51\":1,\"62\":1,\"64\":1,\"75\":1,\"86\":1},\"1\":{\"123\":3}}],[\"输入输出样例\",{\"0\":{\"36\":1,\"50\":1,\"61\":1,\"74\":1,\"85\":1}}],[\"输入描述\",{\"0\":{\"34\":1,\"48\":1,\"59\":1,\"72\":1,\"83\":1}}],[\"输出每天买卖情况\",{\"1\":{\"93\":1}}],[\"输出运算结果\",{\"1\":{\"57\":1}}],[\"输出\",{\"0\":{\"38\":1,\"52\":1,\"63\":1,\"65\":1,\"76\":1,\"87\":1}}],[\"输出描述\",{\"0\":{\"35\":1,\"49\":1,\"60\":1,\"73\":1,\"84\":1}}],[\"输出1\",{\"1\":{\"13\":1}}],[\"输出2\",{\"1\":{\"13\":1}}],[\"例如要切换到\",{\"1\":{\"112\":1}}],[\"例如\",{\"1\":{\"33\":1,\"47\":1}}],[\"例如双向链表节点\",{\"1\":{\"15\":1}}],[\"可能会产生分数\",{\"1\":{\"67\":1}}],[\"可能一个\",{\"1\":{\"33\":1,\"47\":1}}],[\"可以自行搜索\",{\"1\":{\"139\":1}}],[\"可以在官网挑选下载\",{\"1\":{\"123\":1}}],[\"可以在需要时临时提升为\",{\"1\":{\"18\":1}}],[\"可以直接复制粘贴修改到\",{\"1\":{\"120\":1}}],[\"可以直接读写进程数据段\",{\"1\":{\"28\":1}}],[\"可以换\",{\"1\":{\"112\":1}}],[\"可以由\",{\"1\":{\"42\":1}}],[\"可以得到子序列\",{\"1\":{\"33\":1,\"47\":1}}],[\"可以将一方的\",{\"1\":{\"18\":1}}],[\"可以打破循环引用链\",{\"1\":{\"16\":1}}],[\"子序列是指通过从原始序列中删除某些元素\",{\"1\":{\"33\":1,\"47\":1}}],[\"注释掉\",{\"1\":{\"137\":1}}],[\"注册登录后进入如下页面\",{\"1\":{\"136\":1}}],[\"注\",{\"1\":{\"33\":1,\"47\":1}}],[\"宝箱的最终命运掌握在你手中\",{\"1\":{\"33\":1}}],[\"宝箱表面刻着两串小写字母\",{\"1\":{\"33\":1}}],[\"现在\",{\"1\":{\"33\":1}}],[\"并保证最简分数表示\",{\"1\":{\"67\":1}}],[\"并且栈顶运算符的优先级不低于当前运算符\",{\"1\":{\"67\":1}}],[\"并附言\",{\"1\":{\"33\":1}}],[\"并重新将宝箱锁好\",{\"1\":{\"33\":1}}],[\"解压后得到下图三个文件夹\",{\"1\":{\"124\":1}}],[\"解四元一次方程\",{\"1\":{\"101\":1}}],[\"解析完整数字后\",{\"1\":{\"67\":1}}],[\"解法\",{\"0\":{\"40\":1,\"54\":1,\"67\":1,\"78\":1,\"89\":1,\"94\":1,\"98\":1,\"102\":1}}],[\"解锁线索更加复杂\",{\"1\":{\"33\":1}}],[\"解决方法\",{\"0\":{\"16\":1}}],[\"这里加载是的上一次训练了100轮的模型\",{\"1\":{\"139\":1}}],[\"这里使用\",{\"1\":{\"137\":1}}],[\"这里的\",{\"1\":{\"112\":1,\"116\":1}}],[\"这里放一些做过的笔试题\",{\"1\":{\"104\":1}}],[\"这里放一些校赛自己出的题目\",{\"1\":{\"44\":1}}],[\"这一天芳芳旅游回来给他们俩带了n个特产让他们自己分\",{\"1\":{\"82\":1}}],[\"这一天芳芳来到了一个有n位同学的新班级\",{\"1\":{\"71\":1}}],[\"这一天\",{\"1\":{\"71\":1}}],[\"这一次\",{\"1\":{\"33\":1}}],[\"这个库包含了几乎全部运行yolov11所需的环境\",{\"1\":{\"128\":1}}],[\"这个班的老师也要求分组学习\",{\"1\":{\"71\":1}}],[\"这个法宝被施加了层层禁制\",{\"1\":{\"58\":1}}],[\"这个字符串中所有能组合成\",{\"1\":{\"47\":1}}],[\"这种隐式的资源转移容易导致悬空指针或程序崩溃\",{\"1\":{\"7\":1}}],[\"信心十足地摆在了所有参赛者面前\",{\"1\":{\"33\":1}}],[\"题目只保证初始表达式中不含负数\",{\"1\":{\"66\":1}}],[\"题面\",{\"0\":{\"33\":1,\"47\":1,\"58\":1,\"71\":1,\"82\":1,\"93\":1,\"97\":1,\"101\":1}}],[\"题解\",{\"0\":{\"1\":1}}],[\"best\",{\"1\":{\"139\":1,\"140\":1}}],[\"begin\",{\"1\":{\"43\":1}}],[\"bus\",{\"1\":{\"132\":1}}],[\"bundler\",{\"1\":{\"113\":2}}],[\"build\",{\"1\":{\"113\":2,\"116\":1}}],[\"blogs\",{\"1\":{\"112\":2,\"113\":1}}],[\"break\",{\"1\":{\"99\":12,\"103\":7}}],[\"bool\",{\"1\":{\"90\":1}}],[\"b=num\",{\"1\":{\"68\":3}}],[\"batch\",{\"1\":{\"139\":1}}],[\"batch=16\",{\"1\":{\"139\":1}}],[\"base\",{\"1\":{\"115\":2}}],[\"ba​÷dc​=b×ca×d​\",{\"1\":{\"67\":1}}],[\"ba​×dc​=b×da×c​\",{\"1\":{\"67\":1}}],[\"ba​−dc​=b×da×d−b×c​\",{\"1\":{\"67\":1}}],[\"ba​+dc​=b×da×d+b×c​\",{\"1\":{\"67\":1}}],[\"back\",{\"1\":{\"43\":1}}],[\"b\",{\"1\":{\"32\":1,\"33\":2,\"34\":1,\"41\":1,\"42\":3,\"43\":3,\"68\":26}}],[\"简要题面\",{\"0\":{\"32\":1,\"46\":1,\"57\":1,\"70\":1,\"81\":1}}],[\"死锁等\",{\"1\":{\"30\":1}}],[\"多线程在提升效率的同时\",{\"1\":{\"30\":1}}],[\"多个或不删除\",{\"1\":{\"33\":1,\"47\":1}}],[\"多个线程共享资源\",{\"1\":{\"29\":1}}],[\"多个\",{\"1\":{\"15\":1}}],[\"主题提供的脚手架工具创建项目\",{\"1\":{\"112\":1}}],[\"主线程\",{\"1\":{\"30\":1}}],[\"主要是堆内存\",{\"1\":{\"5\":1}}],[\"总结\",{\"0\":{\"30\":1}}],[\"六\",{\"0\":{\"30\":1}}],[\"因为有专门的线程处理用户输入\",{\"1\":{\"29\":1}}],[\"因为总有一些场景需要进行拷贝\",{\"1\":{\"10\":1}}],[\"界面不卡顿\",{\"1\":{\"29\":1}}],[\"比如点击按钮后\",{\"1\":{\"29\":1}}],[\"响应更快\",{\"1\":{\"29\":1}}],[\"上图红框位置显示即为cuda最高支持版本\",{\"1\":{\"123\":1}}],[\"上一步完成推送后\",{\"1\":{\"117\":1}}],[\"上并行执行\",{\"1\":{\"29\":1}}],[\"上述代码中\",{\"1\":{\"15\":1}}],[\"提交信息\",{\"1\":{\"116\":1}}],[\"提示\",{\"0\":{\"39\":1,\"53\":1,\"66\":1,\"77\":1,\"88\":1},\"1\":{\"123\":1}}],[\"提高系统效率\",{\"1\":{\"29\":1}}],[\"提高并发性\",{\"1\":{\"29\":1}}],[\"提升会失败\",{\"1\":{\"18\":1}}],[\"五\",{\"0\":{\"29\":1}}],[\"崩溃影响\",{\"1\":{\"28\":1}}],[\"创建\",{\"1\":{\"28\":2}}],[\"系统开销\",{\"1\":{\"28\":1}}],[\"系统资源\",{\"1\":{\"22\":1}}],[\"共享进程的内存空间\",{\"1\":{\"28\":1}}],[\"拥有独立的内存空间\",{\"1\":{\"28\":1}}],[\"程序执行的基本单位\",{\"1\":{\"28\":1}}],[\"程序结束时资源也不会被释放\",{\"1\":{\"15\":1}}],[\"独立的运行单位\",{\"1\":{\"28\":1}}],[\"独立的内存空间\",{\"1\":{\"22\":1}}],[\"基本概念\",{\"1\":{\"28\":1}}],[\"基本原理\",{\"0\":{\"7\":1,\"10\":1,\"13\":1,\"18\":1}}],[\"四\",{\"0\":{\"28\":1}}],[\"同一进程内通信非常简单\",{\"1\":{\"28\":1}}],[\"同一进程内的线程可轻松协作\",{\"1\":{\"27\":1}}],[\"同一进程的线程共享内存和资源\",{\"1\":{\"27\":1}}],[\"协作能力\",{\"1\":{\"27\":1}}],[\"随结束而死亡\",{\"1\":{\"27\":1}}],[\"生命周期\",{\"1\":{\"27\":1}}],[\"所以直接一步到位\",{\"1\":{\"113\":1}}],[\"所以聪明的你可以告诉她吗\",{\"1\":{\"82\":1}}],[\"所以他们都会想方设法拿到最后一个特产\",{\"1\":{\"82\":1}}],[\"所以老师让每一位同学把自己最好的朋友的序号写在纸上按顺序交给她\",{\"1\":{\"71\":1}}],[\"所属关系\",{\"1\":{\"27\":1}}],[\"所取代\",{\"1\":{\"7\":1}}],[\"说明\",{\"0\":{\"39\":1,\"53\":1,\"66\":1,\"77\":1,\"88\":1},\"1\":{\"27\":1}}],[\"三个相同数字合并时\",{\"1\":{\"98\":1}}],[\"三\",{\"0\":{\"27\":1}}],[\"但占用更多内存\",{\"1\":{\"139\":1}}],[\"但是她不想等待漫长的分配过程\",{\"1\":{\"82\":1}}],[\"但她突然发现名单不见了\",{\"1\":{\"71\":1}}],[\"但不改变剩余元素的相对位置所形成的新序列\",{\"1\":{\"33\":1,\"47\":1}}],[\"但有自己的执行栈和寄存器\",{\"1\":{\"25\":1}}],[\"但防拷贝其实也不是一个很好的办法\",{\"1\":{\"10\":1}}],[\"文件并修改对应信息\",{\"1\":{\"137\":1}}],[\"文件\",{\"1\":{\"115\":1,\"132\":1,\"139\":1,\"140\":1}}],[\"文件中的\",{\"1\":{\"115\":1}}],[\"文件为以下内容\",{\"1\":{\"113\":1}}],[\"文件夹查看训练结果\",{\"1\":{\"140\":1}}],[\"文件夹\",{\"1\":{\"108\":1,\"110\":2,\"113\":1}}],[\"文件等\",{\"1\":{\"25\":1}}],[\"文档\",{\"0\":{\"2\":1}}],[\"内存空间\",{\"1\":{\"28\":1}}],[\"内存\",{\"1\":{\"25\":1}}],[\"线程是调度执行单位\",{\"1\":{\"30\":1}}],[\"线程是进程中的一个执行流\",{\"1\":{\"25\":1}}],[\"线程可以在多核\",{\"1\":{\"29\":1}}],[\"线程\",{\"0\":{\"29\":1},\"1\":{\"28\":1}}],[\"线程随进程的启动而存在\",{\"1\":{\"27\":1}}],[\"线程必须依附于进程存在\",{\"1\":{\"27\":1}}],[\"线程共享进程的资源\",{\"1\":{\"25\":1}}],[\"什么是线程\",{\"0\":{\"24\":1}}],[\"什么是进程\",{\"0\":{\"21\":1}}],[\"二\",{\"0\":{\"24\":1}}],[\"它独立运行\",{\"1\":{\"23\":1}}],[\"它不拥有资源的所有权\",{\"1\":{\"18\":1}}],[\"当前能不能正确的静态部署\",{\"1\":{\"116\":1}}],[\"当前源\",{\"1\":{\"112\":1}}],[\"当你正专注解题时\",{\"1\":{\"47\":1}}],[\"当你打开一个视频播放器\",{\"1\":{\"23\":1}}],[\"当引用计数降为\",{\"1\":{\"13\":1}}],[\"每天选择一支收益最大的全买\",{\"1\":{\"94\":1}}],[\"每人每次最多拿m个特产\",{\"1\":{\"82\":1}}],[\"每行一个序号\",{\"1\":{\"73\":1}}],[\"每个人都想和自己最好的朋友在同一个小组\",{\"1\":{\"71\":1}}],[\"每个进程是独立的资源分配单位\",{\"1\":{\"22\":1}}],[\"每位同学都有一个独一无二的序号\",{\"1\":{\"71\":1}}],[\"每块资源关联一个引用计数\",{\"1\":{\"13\":1}}],[\"✅定义\",{\"0\":{\"22\":1,\"25\":1}}],[\"一般指定为\",{\"1\":{\"139\":1}}],[\"一直点下一步\",{\"1\":{\"120\":1,\"121\":1}}],[\"一行输入三个整数n\",{\"1\":{\"83\":1}}],[\"一行一个数字表示表达式的值\",{\"1\":{\"60\":1}}],[\"一行一个数字表示答案\",{\"1\":{\"35\":1,\"49\":1}}],[\"一行一个包含\",{\"1\":{\"59\":1}}],[\"一行一个字符串\",{\"1\":{\"48\":1}}],[\"一个进程至少有一个线程\",{\"1\":{\"30\":1}}],[\"一个进程崩溃不影响其他进程\",{\"1\":{\"28\":1}}],[\"一个线程崩溃可能影响整个进程\",{\"1\":{\"28\":1}}],[\"一个线程负责播放视频\",{\"1\":{\"26\":1}}],[\"一个线程负责页面响应\",{\"1\":{\"26\":1}}],[\"一个线程负责页面加载\",{\"1\":{\"26\":1}}],[\"一个浏览器进程中可能有多个线程\",{\"1\":{\"26\":1}}],[\"一\",{\"0\":{\"21\":1}}],[\"操作系统会为它创建一个进程\",{\"1\":{\"23\":1}}],[\"操作系统\",{\"0\":{\"19\":1}}],[\"不需要管\",{\"1\":{\"113\":1}}],[\"不可以不拿\",{\"1\":{\"82\":1}}],[\"不过\",{\"1\":{\"58\":1}}],[\"不影响其他程序\",{\"1\":{\"23\":1}}],[\"不影响引用计数\",{\"1\":{\"18\":1}}],[\"不会影响引用计数\",{\"1\":{\"18\":1}}],[\"弱引用\",{\"1\":{\"18\":1}}],[\"成功提升为\",{\"1\":{\"18\":1}}],[\"whl\",{\"1\":{\"127\":1}}],[\"while\",{\"1\":{\"68\":3,\"99\":1}}],[\"win+r\",{\"1\":{\"123\":1}}],[\"windows\",{\"1\":{\"120\":1}}],[\"with\",{\"1\":{\"43\":1,\"68\":1}}],[\"wordcloud\",{\"1\":{\"113\":1}}],[\"waline\",{\"1\":{\"113\":1}}],[\"weights\",{\"1\":{\"139\":1,\"140\":1}}],[\"webpack\",{\"1\":{\"113\":1}}],[\"weak\",{\"0\":{\"17\":1},\"1\":{\"5\":1,\"16\":2,\"18\":6}}],[\"w<<\",{\"1\":{\"103\":1}}],[\"w==0\",{\"1\":{\"103\":1}}],[\"w==1\",{\"1\":{\"90\":2}}],[\"w表示猜拳的结果\",{\"1\":{\"83\":1}}],[\"w\",{\"1\":{\"83\":1,\"90\":1,\"101\":1,\"103\":5}}],[\"wp\",{\"1\":{\"18\":2}}],[\"升级为\",{\"1\":{\"18\":1}}],[\"方法可以将\",{\"1\":{\"18\":1}}],[\"管理的对象\",{\"1\":{\"18\":1}}],[\"观察一个由\",{\"1\":{\"18\":1}}],[\"是否启用自动混合精度训练\",{\"1\":{\"139\":1}}],[\"是否为单类别检测\",{\"1\":{\"139\":1}}],[\"是否在推理结束后显示结果\",{\"1\":{\"132\":1,\"140\":1}}],[\"是否在推理结束后保存结果\",{\"1\":{\"132\":1,\"140\":1}}],[\"是否需要一个自动部署文档到\",{\"1\":{\"112\":1}}],[\"是本地分支名称\",{\"1\":{\"116\":1}}],[\"是你项目所在的文件夹名称\",{\"1\":{\"112\":1}}],[\"是操作系统调度的最小单位\",{\"1\":{\"25\":1}}],[\"是为了解决\",{\"1\":{\"18\":1}}],[\"是一种不拥有资源的智能指针\",{\"1\":{\"16\":1}}],[\"改为\",{\"1\":{\"16\":1,\"109\":1}}],[\"指针\",{\"1\":{\"16\":1}}],[\"父\",{\"1\":{\"16\":1}}],[\"通信方式\",{\"1\":{\"28\":1}}],[\"通常是\",{\"1\":{\"16\":1}}],[\"通过删除元素\",{\"1\":{\"33\":1,\"47\":1}}],[\"通过\",{\"1\":{\"18\":1}}],[\"通过禁止拷贝的方式确保资源的唯一拥有权\",{\"1\":{\"10\":1}}],[\"通过管理权转移的方式避免资源重复释放\",{\"1\":{\"7\":1}}],[\"使用yolo11训练模型\",{\"0\":{\"134\":1}}],[\"使用以下命令可以查看当前的numpy版本\",{\"1\":{\"133\":1}}],[\"使用vuepress搭建个人博客\",{\"0\":{\"105\":1}}],[\"使用\",{\"0\":{\"16\":1},\"1\":{\"18\":2,\"112\":1}}],[\"导致它们的引用计数始终不为\",{\"1\":{\"15\":1}}],[\"导致引用计数无法归零\",{\"1\":{\"15\":1}}],[\"23\",{\"1\":{\"133\":2}}],[\"2500<tmp\",{\"1\":{\"103\":3}}],[\"2500+y\",{\"1\":{\"103\":1}}],[\"2500+z\",{\"1\":{\"103\":2}}],[\"2500\",{\"1\":{\"101\":1}}],[\"28\",{\"1\":{\"38\":1,\"52\":1}}],[\"2\",{\"0\":{\"64\":1,\"65\":1,\"96\":1},\"1\":{\"15\":1,\"54\":3,\"55\":3,\"62\":1,\"64\":1,\"65\":1,\"75\":1,\"76\":1,\"95\":2,\"98\":3,\"113\":16}}],[\"20241104\",{\"1\":{\"140\":1}}],[\"20250322网易互娱游戏研发\",{\"0\":{\"91\":1}}],[\"2048\",{\"0\":{\"96\":1}}],[\"20005\",{\"1\":{\"95\":1}}],[\"20\",{\"1\":{\"7\":1}}],[\"资源利用率高\",{\"1\":{\"29\":1}}],[\"资源分配和拥有的基本单位\",{\"1\":{\"28\":1}}],[\"资源共享\",{\"1\":{\"27\":1}}],[\"资源已释放\",{\"1\":{\"18\":1}}],[\"资源泄露\",{\"1\":{\"15\":1}}],[\"资源自动释放\",{\"1\":{\"13\":1}}],[\"在项目根目录下新建\",{\"1\":{\"139\":1,\"140\":1}}],[\"在项目根目录下新建一个文件夹用来存放导入的数据集\",{\"1\":{\"137\":1}}],[\"在源码根目录下新建\",{\"1\":{\"132\":1}}],[\"在\",{\"1\":{\"109\":1}}],[\"在系统变量的\",{\"1\":{\"109\":1}}],[\"在系统变量里新建\",{\"1\":{\"109\":1}}],[\"在安装路径的根目录下新建\",{\"1\":{\"108\":1}}],[\"在被成功破解上一个宝箱密码后\",{\"1\":{\"33\":1}}],[\"在解决循环引用时\",{\"1\":{\"18\":1}}],[\"在设计结构中\",{\"1\":{\"16\":1}}],[\"在某些场景中\",{\"1\":{\"15\":1}}],[\"在拷贝时将资源的所有权从一个对象转移给另一个对象\",{\"1\":{\"7\":1}}],[\"+\",{\"1\":{\"59\":1,\"67\":2,\"68\":4,\"101\":3}}],[\"+s\",{\"1\":{\"55\":1}}],[\"+dp\",{\"1\":{\"43\":1,\"55\":3}}],[\"+=\",{\"1\":{\"42\":2,\"54\":4}}],[\"++\",{\"1\":{\"14\":2}}],[\"+1\",{\"1\":{\"13\":1,\"43\":1,\"55\":1}}],[\"析构或重新赋值时\",{\"1\":{\"13\":1}}],[\"拷贝时引用计数\",{\"1\":{\"13\":1}}],[\"实例共享该资源\",{\"1\":{\"13\":1}}],[\"记录当前有多少个\",{\"1\":{\"13\":1}}],[\"禁止拷贝构造与赋值\",{\"1\":{\"11\":1}}],[\"~point\",{\"1\":{\"15\":1,\"18\":1}}],[\"~shared\",{\"1\":{\"14\":1}}],[\"~unique\",{\"1\":{\"11\":1}}],[\"~auto\",{\"1\":{\"8\":1}}],[\"了\",{\"1\":{\"10\":1}}],[\"就需要用到\",{\"1\":{\"10\":1}}],[\"如同步\",{\"1\":{\"30\":1}}],[\"如打开的文件\",{\"1\":{\"22\":1}}],[\"如下图所示即安装成功\",{\"1\":{\"123\":1}}],[\"如下改写双向链表的例子\",{\"1\":{\"18\":1}}],[\"如下所示\",{\"1\":{\"18\":1}}],[\"如下例\",{\"1\":{\"10\":1}}],[\"如下例所示\",{\"1\":{\"7\":1}}],[\"如果不需要可以去掉\",{\"1\":{\"139\":1}}],[\"如果提示numpy版本不兼容相关的错误\",{\"1\":{\"133\":1}}],[\"如果本地分支不是\",{\"1\":{\"116\":1}}],[\"如果出现有关crlf\",{\"1\":{\"116\":1}}],[\"如果使用的仓库名与用户名不相同\",{\"1\":{\"115\":1}}],[\"如果\",{\"1\":{\"42\":1}}],[\"如果资源已释放\",{\"1\":{\"18\":1}}],[\"如果想要共享资源\",{\"1\":{\"10\":1}}],[\"编译错误\",{\"1\":{\"10\":1}}],[\"uno\",{\"1\":{\"137\":1,\"139\":1,\"140\":1}}],[\"unique<int>\",{\"1\":{\"10\":1}}],[\"unique\",{\"0\":{\"9\":1},\"1\":{\"5\":1,\"7\":1,\"10\":3,\"11\":6}}],[\"ultralytics\",{\"1\":{\"128\":1,\"132\":2,\"137\":2,\"139\":2,\"140\":1}}],[\"url\",{\"1\":{\"127\":1}}],[\"using\",{\"1\":{\"43\":1,\"55\":1,\"68\":1,\"79\":1,\"90\":1,\"95\":1,\"99\":1,\"103\":1}}],[\"user\",{\"1\":{\"109\":1}}],[\"use\",{\"1\":{\"13\":2,\"14\":1}}],[\"update\",{\"1\":{\"113\":2}}],[\"up\",{\"1\":{\"11\":2}}],[\"up2\",{\"1\":{\"10\":1}}],[\"up1\",{\"1\":{\"10\":2}}],[\">tmp\",{\"1\":{\"95\":1}}],[\">=mp\",{\"1\":{\"68\":1}}],[\">=\",{\"1\":{\"68\":3}}],[\">m\",{\"1\":{\"15\":2}}],[\">\",{\"1\":{\"8\":1,\"11\":1,\"14\":1}}],[\"epochs\",{\"1\":{\"139\":1}}],[\"epochs=100\",{\"1\":{\"139\":1}}],[\"extra\",{\"1\":{\"127\":1}}],[\"exe\",{\"1\":{\"120\":1}}],[\"enhance\",{\"1\":{\"113\":1}}],[\"end\",{\"1\":{\"43\":1}}],[\"endl\",{\"1\":{\"8\":1,\"11\":1,\"13\":2,\"14\":2,\"15\":1,\"18\":3}}],[\"embedded\",{\"1\":{\"113\":1}}],[\"empty\",{\"1\":{\"68\":2}}],[\"echarts\",{\"1\":{\"113\":1}}],[\"e\",{\"1\":{\"112\":3,\"137\":1}}],[\"else\",{\"1\":{\"18\":1,\"55\":2,\"68\":13,\"79\":1,\"90\":3,\"99\":11,\"103\":1}}],[\"error\",{\"1\":{\"7\":1}}],[\"img\",{\"1\":{\"140\":1}}],[\"imgsz\",{\"1\":{\"139\":1}}],[\"imgsz=640\",{\"1\":{\"139\":1}}],[\"images\",{\"1\":{\"140\":1}}],[\"import\",{\"1\":{\"132\":1,\"139\":1,\"140\":1}}],[\"is\",{\"1\":{\"113\":1}}],[\"i>=1\",{\"1\":{\"99\":1}}],[\"i>0\",{\"1\":{\"68\":1}}],[\"ii+1\",{\"1\":{\"99\":6}}],[\"ii++\",{\"1\":{\"99\":1}}],[\"ii<m\",{\"1\":{\"99\":1}}],[\"ii\",{\"1\":{\"99\":15}}],[\"ii>1\",{\"1\":{\"99\":1}}],[\"ii=i\",{\"1\":{\"99\":2}}],[\"it\",{\"1\":{\"84\":2,\"87\":1,\"90\":4}}],[\"i<s\",{\"1\":{\"55\":1,\"68\":1}}],[\"i<a\",{\"1\":{\"43\":1}}],[\"i<=2500\",{\"1\":{\"103\":1}}],[\"i<=m\",{\"1\":{\"99\":6}}],[\"i<=c\",{\"1\":{\"99\":1}}],[\"i<=n\",{\"1\":{\"79\":3,\"95\":3}}],[\"i<=\",{\"1\":{\"43\":1}}],[\"i<b\",{\"1\":{\"43\":1}}],[\"i=m\",{\"1\":{\"99\":1}}],[\"i=2\",{\"1\":{\"95\":1}}],[\"i==find\",{\"1\":{\"79\":1}}],[\"i=0\",{\"1\":{\"43\":2,\"68\":1,\"103\":1}}],[\"i=1\",{\"1\":{\"43\":1,\"55\":1,\"79\":3,\"95\":2,\"99\":7}}],[\"i++\",{\"1\":{\"43\":3,\"55\":1,\"68\":1,\"79\":3,\"95\":3,\"99\":7,\"103\":1}}],[\"ios\",{\"1\":{\"43\":1,\"68\":1}}],[\"index\",{\"1\":{\"127\":1}}],[\"installed\",{\"1\":{\"113\":1}}],[\"install\",{\"1\":{\"113\":1,\"127\":1,\"128\":1,\"133\":1}}],[\"init\",{\"1\":{\"112\":1,\"116\":1}}],[\"include<bits\",{\"1\":{\"43\":1,\"55\":1,\"68\":1,\"79\":1,\"90\":1,\"95\":1,\"99\":1,\"103\":1}}],[\"int>\",{\"1\":{\"68\":1}}],[\"int\",{\"1\":{\"7\":2,\"10\":1,\"13\":1,\"14\":3,\"15\":3,\"18\":3,\"43\":4,\"55\":2,\"68\":2,\"79\":10,\"90\":1,\"95\":8,\"99\":26,\"103\":5}}],[\"i\",{\"1\":{\"41\":2,\"42\":3,\"43\":6,\"54\":2,\"55\":3,\"68\":10,\"79\":3,\"84\":1,\"95\":9,\"99\":29,\"103\":3}}],[\"if\",{\"1\":{\"8\":2,\"11\":1,\"14\":5,\"18\":1,\"43\":1,\"55\":3,\"68\":16,\"79\":4,\"90\":3,\"95\":1,\"99\":19,\"103\":12,\"132\":1,\"139\":1,\"140\":1}}],[\"mixed\",{\"1\":{\"139\":1}}],[\"mit\",{\"1\":{\"112\":1,\"113\":1}}],[\"me\",{\"1\":{\"120\":1}}],[\"mermaid\",{\"1\":{\"113\":1}}],[\"md\",{\"1\":{\"113\":1,\"115\":1}}],[\"m+1\",{\"1\":{\"90\":1}}],[\"m表示每人每次最多可以拿取的数量\",{\"1\":{\"83\":1}}],[\"mul\",{\"1\":{\"68\":4}}],[\"mp\",{\"1\":{\"68\":5}}],[\"models\",{\"1\":{\"139\":1}}],[\"model=r\",{\"1\":{\"132\":1,\"140\":1}}],[\"model\",{\"1\":{\"132\":2,\"139\":4,\"140\":2}}],[\"module\",{\"1\":{\"113\":1}}],[\"mod\",{\"1\":{\"43\":2,\"55\":4}}],[\"mod=998244353\",{\"1\":{\"43\":1,\"55\":1}}],[\"markmap\",{\"1\":{\"113\":3}}],[\"map<char\",{\"1\":{\"68\":1}}],[\"make\",{\"1\":{\"10\":1,\"13\":1,\"15\":2,\"18\":1}}],[\"main\",{\"1\":{\"7\":1,\"10\":1,\"13\":1,\"15\":1,\"18\":1,\"43\":1,\"55\":1,\"68\":1,\"79\":1,\"90\":1,\"95\":1,\"99\":1,\"103\":1,\"116\":3,\"132\":1,\"137\":2,\"139\":1,\"140\":1}}],[\"m\",{\"1\":{\"8\":15,\"11\":8,\"14\":31,\"15\":7,\"18\":7,\"83\":1,\"90\":1,\"93\":1,\"95\":1,\"99\":1,\"116\":1}}],[\"py\",{\"1\":{\"132\":1,\"139\":1,\"140\":1}}],[\"python=3\",{\"1\":{\"126\":1}}],[\"python版本为3\",{\"1\":{\"126\":1}}],[\"pytorch\",{\"1\":{\"123\":1,\"127\":1}}],[\"pt\",{\"1\":{\"130\":1,\"132\":1,\"139\":1,\"140\":1}}],[\"ptr的循环引用问题\",{\"0\":{\"15\":1}}],[\"ptr<point>\",{\"1\":{\"15\":4,\"18\":2}}],[\"ptr<t>\",{\"1\":{\"8\":3,\"11\":3,\"14\":3}}],[\"ptr<int>\",{\"1\":{\"7\":2,\"10\":2,\"13\":2,\"18\":2}}],[\"ptr\",{\"0\":{\"6\":1,\"9\":1,\"12\":1,\"17\":1},\"1\":{\"5\":4,\"7\":3,\"8\":21,\"10\":2,\"11\":14,\"13\":2,\"14\":23,\"15\":1,\"16\":2,\"18\":10}}],[\"pip\",{\"1\":{\"127\":1,\"128\":1,\"133\":2}}],[\"playground\",{\"1\":{\"113\":1}}],[\"plugin\",{\"1\":{\"113\":6}}],[\"package\",{\"1\":{\"113\":2}}],[\"pages\",{\"0\":{\"117\":1},\"1\":{\"112\":1,\"117\":3}}],[\"path\",{\"1\":{\"109\":2,\"137\":1}}],[\"pair<ll\",{\"1\":{\"68\":19}}],[\"pair<分子\",{\"1\":{\"67\":1}}],[\"pop\",{\"1\":{\"68\":10}}],[\"point\",{\"1\":{\"15\":2,\"18\":2}}],[\"p\",{\"1\":{\"54\":1,\"55\":1}}],[\"push\",{\"1\":{\"43\":1,\"68\":16,\"116\":1}}],[\"public\",{\"1\":{\"8\":1,\"11\":1,\"14\":1}}],[\"prompt\",{\"1\":{\"126\":1,\"127\":1,\"133\":1}}],[\"program\",{\"1\":{\"124\":1}}],[\"pro\",{\"1\":{\"113\":1}}],[\"project=\",{\"1\":{\"132\":1,\"140\":1}}],[\"project\",{\"1\":{\"112\":3,\"113\":1}}],[\"process\",{\"0\":{\"21\":1}}],[\"press\",{\"0\":{\"142\":1}}],[\"precision\",{\"1\":{\"139\":1}}],[\"predict\",{\"1\":{\"132\":1,\"140\":1}}],[\"prefix\",{\"1\":{\"110\":1}}],[\"prev\",{\"1\":{\"15\":3,\"18\":2}}],[\"printf\",{\"1\":{\"95\":1}}],[\"private\",{\"1\":{\"8\":1,\"11\":1,\"14\":1}}],[\"cfg\",{\"1\":{\"139\":1}}],[\"cu118\",{\"1\":{\"127\":1}}],[\"cuda\",{\"1\":{\"123\":3,\"124\":1}}],[\"create\",{\"1\":{\"126\":1}}],[\"cls\",{\"1\":{\"139\":1}}],[\"cls=false\",{\"1\":{\"139\":1}}],[\"client\",{\"1\":{\"113\":1}}],[\"clean\",{\"1\":{\"113\":2}}],[\"class\",{\"1\":{\"8\":1,\"11\":1,\"14\":1}}],[\"cd\",{\"1\":{\"112\":1}}],[\"cmd\",{\"1\":{\"109\":1,\"110\":1,\"112\":1,\"123\":1}}],[\"cache=false\",{\"1\":{\"139\":1}}],[\"cache\",{\"1\":{\"108\":1,\"109\":1,\"110\":3,\"113\":1,\"139\":1}}],[\"c\",{\"1\":{\"54\":1,\"55\":1,\"99\":1,\"109\":1,\"120\":1,\"124\":1}}],[\"cin>>x>>y>>z>>w>>n\",{\"1\":{\"103\":1}}],[\"cin>>m>>n\",{\"1\":{\"99\":1}}],[\"cin>>op\",{\"1\":{\"99\":1}}],[\"cin>>c\",{\"1\":{\"99\":1}}],[\"cin>>t\",{\"1\":{\"99\":1}}],[\"cin>>temp\",{\"1\":{\"79\":1}}],[\"cin>>a\",{\"1\":{\"95\":1,\"99\":1}}],[\"cin>>a>>b\",{\"1\":{\"43\":1}}],[\"cin>>n>>m>>k\",{\"1\":{\"95\":1}}],[\"cin>>n>>m>>w\",{\"1\":{\"90\":1}}],[\"cin>>n\",{\"1\":{\"79\":1}}],[\"cin>>s\",{\"1\":{\"55\":1,\"68\":1}}],[\"cin\",{\"1\":{\"43\":1,\"68\":1}}],[\"computing\",{\"1\":{\"124\":1}}],[\"components\",{\"1\":{\"113\":1}}],[\"commit\",{\"1\":{\"116\":1}}],[\"core\",{\"1\":{\"113\":1,\"116\":1}}],[\"conda\",{\"1\":{\"126\":1,\"127\":1,\"133\":1}}],[\"config\",{\"1\":{\"110\":2,\"115\":1,\"116\":1}}],[\"continue\",{\"1\":{\"99\":4,\"103\":3}}],[\"const\",{\"1\":{\"43\":1,\"55\":1}}],[\"count\",{\"1\":{\"13\":2,\"14\":15}}],[\"cout<<a\",{\"1\":{\"99\":1}}],[\"cout<<ans\",{\"1\":{\"68\":2,\"95\":1}}],[\"cout<<\",{\"1\":{\"90\":4,\"99\":1,\"103\":1}}],[\"cout<<i<<\",{\"1\":{\"79\":1,\"103\":2}}],[\"cout<<dp\",{\"1\":{\"43\":1,\"55\":1}}],[\"cout\",{\"1\":{\"8\":1,\"11\":1,\"13\":2,\"14\":2,\"15\":1,\"18\":3,\"43\":1,\"68\":1}}],[\"cpcs\",{\"0\":{\"31\":1}}],[\"cpu\",{\"1\":{\"29\":1,\"139\":2}}],[\"c++11\",{\"1\":{\"7\":1}}],[\"c++\",{\"0\":{\"4\":1},\"1\":{\"5\":1}}],[\"test\",{\"1\":{\"137\":1,\"140\":2}}],[\"template\",{\"1\":{\"113\":1}}],[\"template<class\",{\"1\":{\"8\":1,\"11\":1,\"14\":1}}],[\"temp+=s\",{\"1\":{\"68\":1}}],[\"temp=0\",{\"1\":{\"68\":2}}],[\"temp\",{\"1\":{\"18\":2,\"68\":3,\"79\":2}}],[\"train17\",{\"1\":{\"140\":1}}],[\"train16\",{\"1\":{\"139\":1}}],[\"train\",{\"1\":{\"137\":1,\"139\":2}}],[\"true\",{\"1\":{\"116\":1,\"139\":2}}],[\"torchvision==0\",{\"1\":{\"127\":1}}],[\"torch==2\",{\"1\":{\"127\":1}}],[\"toolkit\",{\"1\":{\"124\":1}}],[\"toolbar\",{\"1\":{\"113\":1}}],[\"top\",{\"1\":{\"68\":18}}],[\"ts\",{\"1\":{\"113\":1,\"115\":1}}],[\"types\",{\"1\":{\"113\":1}}],[\"type\",{\"1\":{\"113\":1}}],[\"typedef\",{\"1\":{\"43\":1,\"55\":1,\"68\":1,\"90\":1,\"99\":1,\"103\":1}}],[\"tmp<0\",{\"1\":{\"103\":3}}],[\"tmp\",{\"1\":{\"103\":2}}],[\"tmp==0\",{\"1\":{\"103\":1}}],[\"tmp=n\",{\"1\":{\"103\":3}}],[\"tmp=a\",{\"1\":{\"95\":1}}],[\"tmp=1\",{\"1\":{\"95\":1}}],[\"tie\",{\"1\":{\"43\":2,\"68\":2}}],[\"theme\",{\"1\":{\"112\":2,\"113\":4}}],[\"thread\",{\"0\":{\"24\":1}}],[\"this\",{\"1\":{\"8\":2,\"14\":1}}],[\"t\",{\"1\":{\"8\":4,\"11\":4,\"14\":4,\"84\":1,\"99\":2}}],[\"t>\",{\"1\":{\"8\":1,\"11\":1,\"14\":1}}],[\"被聪明的参赛者们打开了第一个宝箱后\",{\"1\":{\"58\":1}}],[\"被\",{\"1\":{\"7\":1}}],[\"后\",{\"1\":{\"7\":1}}],[\"很多公司已禁止使用\",{\"1\":{\"7\":1}}],[\"0+cu118\",{\"1\":{\"127\":1}}],[\"0表示小张获胜\",{\"1\":{\"83\":1}}],[\"0<=w<=1\",{\"1\":{\"83\":1}}],[\"0\",{\"1\":{\"7\":1,\"10\":2,\"13\":2,\"14\":2,\"15\":2,\"18\":1,\"42\":3,\"43\":7,\"55\":1,\"68\":8,\"79\":1,\"90\":1,\"95\":1,\"98\":6,\"99\":1,\"103\":1,\"113\":37,\"127\":1,\"139\":2}}],[\"已经对这些数字感到力不从心\",{\"1\":{\"58\":1}}],[\"已经为\",{\"1\":{\"7\":1}}],[\"已废弃\",{\"0\":{\"6\":1}}],[\"=a\",{\"1\":{\"99\":4}}],[\"=tmp\",{\"1\":{\"95\":1}}],[\"=j\",{\"1\":{\"95\":2}}],[\"=ni\",{\"1\":{\"79\":1}}],[\"=nt\",{\"1\":{\"79\":2}}],[\"=i\",{\"1\":{\"79\":1}}],[\"=find\",{\"1\":{\"79\":1}}],[\"=fa\",{\"1\":{\"79\":1}}],[\"=2\",{\"1\":{\"68\":1,\"99\":4}}],[\"=10\",{\"1\":{\"68\":1}}],[\"=1\",{\"1\":{\"68\":1,\"99\":4}}],[\"=0\",{\"1\":{\"68\":1,\"99\":9}}],[\"=mp\",{\"1\":{\"68\":3}}],[\"=gcd\",{\"1\":{\"68\":8}}],[\"==2\",{\"1\":{\"99\":1}}],[\"==a\",{\"1\":{\"99\":4}}],[\"==0\",{\"1\":{\"99\":9}}],[\"==1\",{\"1\":{\"90\":1,\"99\":1}}],[\"==b\",{\"1\":{\"43\":1}}],[\"==\",{\"1\":{\"14\":2,\"42\":1,\"55\":3,\"68\":11,\"132\":1,\"139\":1,\"140\":1}}],[\"=\",{\"1\":{\"7\":2,\"8\":7,\"10\":1,\"11\":5,\"13\":1,\"14\":8,\"15\":4,\"18\":3,\"43\":2,\"55\":4,\"68\":1,\"101\":1,\"132\":1,\"139\":2,\"140\":1}}],[\"1aa0dc9a8d69f838ea9e725080b5d2b8\",{\"1\":{\"140\":1}}],[\"1+cu118\",{\"1\":{\"127\":1}}],[\"120135\",{\"1\":{\"140\":1}}],[\"12\",{\"1\":{\"123\":1}}],[\"17\",{\"1\":{\"113\":3}}],[\"11\",{\"1\":{\"113\":4,\"123\":2,\"139\":1}}],[\"15\",{\"1\":{\"113\":3,\"127\":1}}],[\"16\",{\"1\":{\"113\":3}}],[\"1<<\",{\"1\":{\"95\":2}}],[\"1<=m<=n\",{\"1\":{\"83\":1}}],[\"1<=n<=10^18\",{\"1\":{\"83\":1}}],[\"1表示小连获胜\",{\"1\":{\"83\":1}}],[\"1≤∣s∣≤107\",{\"1\":{\"48\":1}}],[\"1≤∣b∣≤103\",{\"1\":{\"34\":1}}],[\"1≤∣a∣≤105\",{\"1\":{\"34\":1}}],[\"10的虚拟环境\",{\"1\":{\"126\":1}}],[\"100005\",{\"1\":{\"79\":1}}],[\"1005\",{\"1\":{\"43\":1}}],[\"10\",{\"1\":{\"7\":1,\"18\":1,\"86\":1,\"126\":1}}],[\"1\",{\"0\":{\"37\":1,\"38\":1,\"51\":1,\"52\":1,\"62\":1,\"63\":1,\"75\":1,\"76\":1,\"86\":1,\"87\":1,\"92\":1},\"1\":{\"7\":1,\"13\":2,\"14\":1,\"15\":1,\"42\":4,\"43\":2,\"54\":4,\"55\":3,\"65\":1,\"67\":1,\"68\":6,\"75\":1,\"76\":1,\"86\":1,\"95\":5,\"98\":4,\"99\":12,\"103\":1,\"113\":8,\"123\":1}}],[\"nvcc\",{\"1\":{\"123\":1}}],[\"nvidia\",{\"1\":{\"123\":1,\"124\":1}}],[\"npx\",{\"1\":{\"113\":1}}],[\"npm\",{\"1\":{\"109\":2,\"110\":2,\"112\":2,\"113\":2,\"116\":1}}],[\"name\",{\"1\":{\"113\":1,\"132\":1,\"139\":1,\"140\":1}}],[\"namespace\",{\"1\":{\"8\":1,\"11\":1,\"14\":1,\"43\":1,\"55\":1,\"68\":1,\"79\":1,\"90\":1,\"95\":1,\"99\":1,\"103\":1}}],[\"not\",{\"1\":{\"113\":1,\"141\":1}}],[\"no\",{\"1\":{\"112\":1}}],[\"nodejs\",{\"1\":{\"109\":2,\"110\":2}}],[\"node\",{\"1\":{\"107\":1,\"108\":2,\"109\":9,\"110\":4}}],[\"n表示特产数量\",{\"1\":{\"83\":1}}],[\"nt\",{\"1\":{\"79\":1}}],[\"nt=find\",{\"1\":{\"79\":1}}],[\"ni<nt\",{\"1\":{\"79\":1}}],[\"ni\",{\"1\":{\"79\":2}}],[\"ni=find\",{\"1\":{\"79\":1}}],[\"numpy\",{\"1\":{\"133\":1}}],[\"numpy==1\",{\"1\":{\"133\":1}}],[\"num\",{\"1\":{\"67\":2,\"68\":21}}],[\"nullptr\",{\"1\":{\"7\":3,\"8\":5,\"11\":3,\"14\":5,\"15\":2,\"18\":1}}],[\"n\",{\"1\":{\"43\":1,\"55\":1,\"68\":2,\"79\":2,\"90\":6,\"93\":1,\"95\":3,\"99\":2,\"101\":1,\"103\":3,\"126\":1}}],[\"next\",{\"1\":{\"15\":3,\"18\":2}}],[\"new\",{\"1\":{\"7\":1,\"14\":1}}],[\"single\",{\"1\":{\"139\":2}}],[\"size\",{\"1\":{\"43\":3}}],[\"show\",{\"1\":{\"133\":1}}],[\"show=true\",{\"1\":{\"132\":1,\"140\":1}}],[\"shared<point>\",{\"1\":{\"15\":2}}],[\"shared<int>\",{\"1\":{\"13\":1,\"18\":1}}],[\"shared\",{\"0\":{\"12\":1,\"15\":1},\"1\":{\"5\":1,\"10\":1,\"13\":4,\"14\":6,\"15\":5,\"18\":8,\"113\":1}}],[\"source是要推理的图片路径这里使用数据集提供的图片\",{\"1\":{\"140\":1}}],[\"source是要推理的图片路径这里使用yolo自带的图片\",{\"1\":{\"132\":1}}],[\"source=r\",{\"1\":{\"132\":1,\"140\":1}}],[\"sort\",{\"1\":{\"43\":1}}],[\"smi\",{\"1\":{\"123\":1}}],[\"save=true\",{\"1\":{\"132\":1,\"140\":1}}],[\"sass\",{\"1\":{\"113\":2}}],[\"sandpack\",{\"1\":{\"113\":1}}],[\"sacpc\",{\"1\":{\"33\":1,\"47\":1}}],[\"src\",{\"1\":{\"113\":4,\"115\":1}}],[\"search\",{\"1\":{\"113\":1}}],[\"set\",{\"1\":{\"110\":2}}],[\"second<<\",{\"1\":{\"68\":1}}],[\"second<0\",{\"1\":{\"68\":1}}],[\"second==1\",{\"1\":{\"68\":1}}],[\"second=\",{\"1\":{\"68\":1}}],[\"second+a\",{\"1\":{\"68\":1}}],[\"second\",{\"1\":{\"68\":12}}],[\"sub\",{\"1\":{\"68\":4}}],[\"s=\",{\"1\":{\"55\":1}}],[\"scripts\",{\"1\":{\"113\":1}}],[\"sc\",{\"1\":{\"54\":3}}],[\"scp\",{\"1\":{\"54\":3}}],[\"scppcsscpspccsp\",{\"1\":{\"37\":1,\"51\":1}}],[\"scpc\",{\"0\":{\"45\":1},\"1\":{\"33\":1,\"37\":1,\"47\":2,\"54\":2}}],[\"s\",{\"1\":{\"48\":1,\"54\":4,\"55\":5,\"68\":14}}],[\"sync\",{\"1\":{\"43\":1,\"68\":1}}],[\"stack<char>\",{\"1\":{\"68\":1}}],[\"stack<pair<ll\",{\"1\":{\"68\":1}}],[\"string\",{\"1\":{\"43\":1,\"55\":1,\"68\":1}}],[\"struct\",{\"1\":{\"15\":1,\"18\":1}}],[\"stdio\",{\"1\":{\"43\":1,\"68\":1}}],[\"stdc++\",{\"1\":{\"43\":1,\"55\":1,\"68\":1,\"79\":1,\"90\":1,\"95\":1,\"99\":1,\"103\":1}}],[\"std\",{\"0\":{\"15\":1},\"1\":{\"7\":2,\"8\":2,\"10\":3,\"11\":2,\"13\":7,\"14\":4,\"15\":8,\"16\":1,\"18\":12,\"43\":1,\"55\":1,\"68\":1,\"79\":1,\"90\":1,\"95\":1,\"99\":1,\"103\":1}}],[\"sp\",{\"1\":{\"14\":7,\"18\":2}}],[\"sp2\",{\"1\":{\"13\":1,\"15\":4}}],[\"sp1\",{\"1\":{\"13\":4,\"15\":4}}],[\"的\",{\"1\":{\"137\":1}}],[\"的源\",{\"1\":{\"117\":1}}],[\"的报错是正常的\",{\"1\":{\"113\":1}}],[\"的工作流\",{\"1\":{\"112\":1}}],[\"的路径\",{\"1\":{\"109\":1}}],[\"的表达式\",{\"1\":{\"57\":1,\"59\":1}}],[\"的个数\",{\"1\":{\"54\":3}}],[\"的个数增加\",{\"1\":{\"54\":3}}],[\"的出现次数\",{\"1\":{\"54\":1}}],[\"的数量\",{\"1\":{\"54\":4}}],[\"的子序列数量\",{\"1\":{\"47\":1}}],[\"的值\",{\"1\":{\"42\":1}}],[\"的第\",{\"1\":{\"42\":1}}],[\"的循环引用问题而引入的辅助智能指针\",{\"1\":{\"18\":1}}],[\"的所有权被转移给\",{\"1\":{\"7\":1}}],[\"的对象\",{\"1\":{\"5\":1}}],[\"amp\",{\"1\":{\"139\":2}}],[\"amp=true\",{\"1\":{\"139\":1}}],[\"assets\",{\"1\":{\"132\":1}}],[\"activate\",{\"1\":{\"127\":1,\"133\":1}}],[\"anaconda\",{\"1\":{\"126\":1,\"127\":1,\"133\":1}}],[\"anaconda3\",{\"1\":{\"120\":2}}],[\"anaconda3由于是国外网站下载较慢\",{\"1\":{\"120\":1}}],[\"ans\",{\"1\":{\"68\":6,\"95\":3}}],[\"ans=num\",{\"1\":{\"68\":1}}],[\"artplayer\",{\"1\":{\"113\":1}}],[\"a=num\",{\"1\":{\"68\":3}}],[\"add\",{\"1\":{\"68\":4,\"116\":3}}],[\"a\",{\"1\":{\"33\":3,\"34\":1,\"41\":1,\"42\":5,\"43\":6,\"47\":1,\"68\":17,\"95\":4,\"99\":29,\"113\":1}}],[\"appdate\",{\"1\":{\"109\":1}}],[\"ap\",{\"1\":{\"8\":7}}],[\"ap2\",{\"1\":{\"7\":3}}],[\"ap1\",{\"1\":{\"7\":6}}],[\"automatic\",{\"1\":{\"139\":1}}],[\"autocrlf\",{\"1\":{\"116\":1}}],[\"auto\",{\"0\":{\"6\":1},\"1\":{\"5\":1,\"7\":4,\"8\":6,\"18\":1,\"43\":1}}],[\"确保资源仅被释放一次\",{\"1\":{\"7\":1}}],[\"原来的对象指针被置为\",{\"1\":{\"7\":1}}],[\"和括号\",{\"1\":{\"67\":1}}],[\"和\",{\"1\":{\"5\":1,\"15\":1,\"33\":1,\"108\":1,\"109\":1,\"123\":1}}],[\"常见的智能指针包括\",{\"1\":{\"5\":1}}],[\"智能指针是用于自动管理动态资源\",{\"1\":{\"5\":1}}],[\"智能指针\",{\"0\":{\"5\":1}}],[\"项目需要用到多语言么\",{\"1\":{\"112\":1}}],[\"项目\",{\"0\":{\"3\":1}}],[\"欢迎来到小鸡的项目笔记✨\",{\"1\":{\"3\":1}}],[\"欢迎来到小鸡的个人文档✨\",{\"1\":{\"2\":1}}],[\"欢迎来到小鸡的题解专题✨\",{\"1\":{\"1\":1}}],[\"欢迎来到小鸡的学习笔记✨\",{\"1\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
