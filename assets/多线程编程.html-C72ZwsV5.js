import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as t,b as i,w as o,d as r,r as s,o as p,e as d}from"./app-7zc9Oh2l.js";const c={},h={class:"hint-container tip"};function m(B,e){const n=s("RouteLink");return p(),l("div",null,[e[2]||(e[2]=t("h1",{id:"多线程编程",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#多线程编程"},[t("span",null,"多线程编程")])],-1)),e[3]||(e[3]=t("h2",{id:"一、操作系统中的进程与线程",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#一、操作系统中的进程与线程"},[t("span",null,"一、操作系统中的进程与线程")])],-1)),e[4]||(e[4]=t("p",null,"在另一篇里介绍过了",-1)),t("div",h,[e[1]||(e[1]=t("p",{class:"hint-container-title"},"点击查看👇",-1)),t("p",null,[i(n,{to:"/blog/learning/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B.html"},{default:o(()=>e[0]||(e[0]=[d("操作系统中的进程与线程")])),_:1})])]),e[5]||(e[5]=r('<h2 id="二、为什么使用多线程" tabindex="-1"><a class="header-anchor" href="#二、为什么使用多线程"><span>二、为什么使用多线程？</span></a></h2><h2 id="_1-单线程的局限" tabindex="-1"><a class="header-anchor" href="#_1-单线程的局限"><span>1.单线程的局限</span></a></h2><ul><li>执行任务被阻塞（如读取文件、等待网络）</li><li>无法利用多核 CPU</li><li>响应慢、效率低</li></ul><h2 id="_2-多线程的优势" tabindex="-1"><a class="header-anchor" href="#_2-多线程的优势"><span>2.多线程的优势</span></a></h2><ul><li>任务并发执行，响应更快</li><li>提高 CPU 使用率</li><li>解耦复杂逻辑（界面、计算、IO 分离）</li></ul>',5))])}const u=a(c,[["render",m],["__file","多线程编程.html.vue"]]),_=JSON.parse('{"path":"/blog/learning/C__/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B.html","title":"多线程编程","lang":"zh-CN","frontmatter":{"title":"多线程编程","categories":["C++","多线程"],"order":2,"description":"多线程编程 一、操作系统中的进程与线程 在另一篇里介绍过了 点击查看👇 二、为什么使用多线程？ 1.单线程的局限 执行任务被阻塞（如读取文件、等待网络） 无法利用多核 CPU 响应慢、效率低 2.多线程的优势 任务并发执行，响应更快 提高 CPU 使用率 解耦复杂逻辑（界面、计算、IO 分离）","head":[["meta",{"property":"og:url","content":"https://github.com/kef25055/FFFF/blog/learning/C__/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"小鸡很方"}],["meta",{"property":"og:title","content":"多线程编程"}],["meta",{"property":"og:description","content":"多线程编程 一、操作系统中的进程与线程 在另一篇里介绍过了 点击查看👇 二、为什么使用多线程？ 1.单线程的局限 执行任务被阻塞（如读取文件、等待网络） 无法利用多核 CPU 响应慢、效率低 2.多线程的优势 任务并发执行，响应更快 提高 CPU 使用率 解耦复杂逻辑（界面、计算、IO 分离）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-05T05:37:44.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-05T05:37:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多线程编程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-05T05:37:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小鸡很方\\",\\"url\\":\\"https://github.com/kef25055\\"}]}"]]},"headers":[{"level":2,"title":"一、操作系统中的进程与线程","slug":"一、操作系统中的进程与线程","link":"#一、操作系统中的进程与线程","children":[]},{"level":2,"title":"二、为什么使用多线程？","slug":"二、为什么使用多线程","link":"#二、为什么使用多线程","children":[]},{"level":2,"title":"1.单线程的局限","slug":"_1-单线程的局限","link":"#_1-单线程的局限","children":[]},{"level":2,"title":"2.多线程的优势","slug":"_2-多线程的优势","link":"#_2-多线程的优势","children":[]}],"git":{"createdTime":1743831464000,"updatedTime":1743831464000,"contributors":[{"name":"小鸡很方","email":"fang-kk@qq.com","commits":1}]},"readingTime":{"minutes":0.49,"words":148},"filePathRelative":"blog/learning/C++/多线程编程.md","localizedDate":"2025年4月5日","excerpt":"\\n<h2>一、操作系统中的进程与线程</h2>\\n<p>在另一篇里介绍过了</p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">点击查看👇</p>\\n<p><a href=\\"/FFFF/blog/learning/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B.html\\" target=\\"_blank\\">操作系统中的进程与线程</a></p>\\n</div>\\n<h2>二、为什么使用多线程？</h2>","autoDesc":true}');export{u as comp,_ as data};
