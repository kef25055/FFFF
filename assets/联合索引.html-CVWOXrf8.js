import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as n,o as i}from"./app-DrMkDe2R.js";const r={};function l(o,e){return i(),t("div",null,e[0]||(e[0]=[n('<h1 id="联合索引" tabindex="-1"><a class="header-anchor" href="#联合索引"><span>联合索引</span></a></h1><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><p>联合索引，也称为复合索引或组合索引，是在数据库中对多个字段同时建立的索引。 这种索引考虑了字段间的顺序，例如索引 (a,b,c) 和索引 (a,c,b) 是两个不同的联合索引。 联合索引的优势在于它可以通过一个索引实现多个字段的索引效果，从而节省存储空间并提高查询效率。</p><h2 id="优势" tabindex="-1"><a class="header-anchor" href="#优势"><span>优势</span></a></h2><h3 id="空间和性能优化" tabindex="-1"><a class="header-anchor" href="#空间和性能优化"><span>空间和性能优化</span></a></h3><p>创建一个联合索引 (a,b,c) 相当于同时创建了索引 a，索引 (a,b) 和索引 (a,b,c)。 这样一个索引就能起到多个索引的作用，减少了写操作和磁盘空间的开销。</p><h3 id="覆盖索引" tabindex="-1"><a class="header-anchor" href="#覆盖索引"><span>覆盖索引</span></a></h3><p>如果拆线呢语句中的选择列完全由联合索引覆盖，比如：</p><div class="language-mysql line-numbers-mode" data-highlighter="shiki" data-ext="mysql" data-title="mysql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select a,b,c from table where a=&#39;xxx&#39; and b=&#39;xxx&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>MySQL可以直接通过遍历索引获取数据，无需回表，大大减少了随机 IO 操作。</p><h3 id="筛选效率" tabindex="-1"><a class="header-anchor" href="#筛选效率"><span>筛选效率</span></a></h3><p>联合索引可以使得通过索引筛选出来的数据更少，更精确的缩小结果集的范围，从而提高查询效率。</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><p>假如我们对 (a,b) 段建立索引，如下图所示：</p><figure><img src="https://github.com/kef25055/Typoraimg/blob/main/blog/learning/数据库/3.png?raw=true" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>数据首先按照 a 来排序，在 a 相等的情况下才会按照 b 排序。因此我们可以看到 a 是有序的，而 b 是一种全局无序局部有序的状态。</p><h3 id="最左匹配原则" tabindex="-1"><a class="header-anchor" href="#最左匹配原则"><span>最左匹配原则</span></a></h3><p>在使用联合索引时，MySQL 会首先匹配最左边的字段。 如果查询条件中跳过了最左边的字段，索引可能不会被有效利用，因为后面的字段全局无序。</p><h3 id="避免范围查询中断" tabindex="-1"><a class="header-anchor" href="#避免范围查询中断"><span>避免范围查询中断</span></a></h3><p>MySQL 在使用联合索引时，会一直向右匹配直到遇到范围查询（如 <code>&gt;</code>、<code>&lt;</code> 等），这会导致索引的后续部分无法被利用。</p><p>当查询 <code>a &gt; 1 and b = 2</code> 时，a 字段能用到索引，b 字段用不到索引。 因为 a 的值此时是一个范围，不是固定的，在这个范围内 b 值不是有序的，因此b字段用不上索引。</p>',21)]))}const p=a(r,[["render",l],["__file","联合索引.html.vue"]]),h=JSON.parse('{"path":"/blog/learning/%E6%95%B0%E6%8D%AE%E5%BA%93/%E8%81%94%E5%90%88%E7%B4%A2%E5%BC%95.html","title":"联合索引","lang":"zh-CN","frontmatter":{"title":"联合索引","categories":["数据库"],"tags":["索引"],"order":4,"description":"联合索引 概念 联合索引，也称为复合索引或组合索引，是在数据库中对多个字段同时建立的索引。 这种索引考虑了字段间的顺序，例如索引 (a,b,c) 和索引 (a,c,b) 是两个不同的联合索引。 联合索引的优势在于它可以通过一个索引实现多个字段的索引效果，从而节省存储空间并提高查询效率。 优势 空间和性能优化 创建一个联合索引 (a,b,c) 相当于同时...","head":[["meta",{"property":"og:url","content":"https://github.com/kef25055/FFFF/blog/learning/%E6%95%B0%E6%8D%AE%E5%BA%93/%E8%81%94%E5%90%88%E7%B4%A2%E5%BC%95.html"}],["meta",{"property":"og:site_name","content":"小鸡很方"}],["meta",{"property":"og:title","content":"联合索引"}],["meta",{"property":"og:description","content":"联合索引 概念 联合索引，也称为复合索引或组合索引，是在数据库中对多个字段同时建立的索引。 这种索引考虑了字段间的顺序，例如索引 (a,b,c) 和索引 (a,c,b) 是两个不同的联合索引。 联合索引的优势在于它可以通过一个索引实现多个字段的索引效果，从而节省存储空间并提高查询效率。 优势 空间和性能优化 创建一个联合索引 (a,b,c) 相当于同时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/kef25055/Typoraimg/blob/main/blog/learning/%E6%95%B0%E6%8D%AE%E5%BA%93/3.png?raw=true"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-08T02:44:41.000Z"}],["meta",{"property":"article:tag","content":"索引"}],["meta",{"property":"article:modified_time","content":"2025-04-08T02:44:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"联合索引\\",\\"image\\":[\\"https://github.com/kef25055/Typoraimg/blob/main/blog/learning/%E6%95%B0%E6%8D%AE%E5%BA%93/3.png?raw=true\\"],\\"dateModified\\":\\"2025-04-08T02:44:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小鸡很方\\",\\"url\\":\\"https://github.com/kef25055\\"}]}"]]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"优势","slug":"优势","link":"#优势","children":[{"level":3,"title":"空间和性能优化","slug":"空间和性能优化","link":"#空间和性能优化","children":[]},{"level":3,"title":"覆盖索引","slug":"覆盖索引","link":"#覆盖索引","children":[]},{"level":3,"title":"筛选效率","slug":"筛选效率","link":"#筛选效率","children":[]}]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[{"level":3,"title":"最左匹配原则","slug":"最左匹配原则","link":"#最左匹配原则","children":[]},{"level":3,"title":"避免范围查询中断","slug":"避免范围查询中断","link":"#避免范围查询中断","children":[]}]}],"git":{"createdTime":1744080281000,"updatedTime":1744080281000,"contributors":[{"name":"小鸡很方","email":"fang-kk@qq.com","commits":1}]},"readingTime":{"minutes":1.96,"words":587},"filePathRelative":"blog/learning/数据库/联合索引.md","localizedDate":"2025年4月8日","excerpt":"\\n<h2>概念</h2>\\n<p>联合索引，也称为复合索引或组合索引，是在数据库中对多个字段同时建立的索引。\\n这种索引考虑了字段间的顺序，例如索引 (a,b,c) 和索引 (a,c,b) 是两个不同的联合索引。\\n联合索引的优势在于它可以通过一个索引实现多个字段的索引效果，从而节省存储空间并提高查询效率。</p>\\n<h2>优势</h2>\\n<h3>空间和性能优化</h3>\\n<p>创建一个联合索引 (a,b,c) 相当于同时创建了索引 a，索引 (a,b) 和索引 (a,b,c)。\\n这样一个索引就能起到多个索引的作用，减少了写操作和磁盘空间的开销。</p>\\n<h3>覆盖索引</h3>\\n<p>如果拆线呢语句中的选择列完全由联合索引覆盖，比如：</p>","autoDesc":true}');export{p as comp,h as data};
